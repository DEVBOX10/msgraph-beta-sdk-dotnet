// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: IEntityRequest.cs.tt

namespace Microsoft.Graph.DeviceManagementNamespace
{
    using System;
    using System.IO;
    using System.Net.Http;
    using System.Threading;
    using System.Linq.Expressions;

    /// <summary>
    /// The interface IAlertRuleRequest.
    /// </summary>
    public partial interface IAlertRuleRequest : Microsoft.Graph.IBaseRequest
    {
        /// <summary>
        /// Creates the specified AlertRule using POST.
        /// </summary>
        /// <param name="alertRuleToCreate">The AlertRule to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The created AlertRule.</returns>
        System.Threading.Tasks.Task<AlertRule> CreateAsync(AlertRule alertRuleToCreate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Creates the specified AlertRule using POST and returns a <see cref="GraphResponse{AlertRule}"/> object.
        /// </summary>
        /// <param name="alertRuleToCreate">The AlertRule to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{AlertRule}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<AlertRule>> CreateResponseAsync(AlertRule alertRuleToCreate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Deletes the specified AlertRule.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        System.Threading.Tasks.Task DeleteAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Deletes the specified AlertRule and returns a <see cref="GraphResponse"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task of <see cref="GraphResponse"/> to await.</returns>
        System.Threading.Tasks.Task<GraphResponse> DeleteResponseAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets the specified AlertRule.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The AlertRule.</returns>
        System.Threading.Tasks.Task<AlertRule> GetAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets the specified AlertRule and returns a <see cref="GraphResponse{AlertRule}"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{AlertRule}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<AlertRule>> GetResponseAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified AlertRule using PATCH.
        /// </summary>
        /// <param name="alertRuleToUpdate">The AlertRule to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="Microsoft.Graph.ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The updated AlertRule.</returns>
        System.Threading.Tasks.Task<AlertRule> UpdateAsync(AlertRule alertRuleToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified AlertRule using PATCH and returns a <see cref="GraphResponse{AlertRule}"/> object.
        /// </summary>
        /// <param name="alertRuleToUpdate">The AlertRule to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="Microsoft.Graph.ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The <see cref="GraphResponse{AlertRule}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<AlertRule>> UpdateResponseAsync(AlertRule alertRuleToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified AlertRule using PUT.
        /// </summary>
        /// <param name="alertRuleToUpdate">The AlertRule object to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        System.Threading.Tasks.Task<AlertRule> PutAsync(AlertRule alertRuleToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified AlertRule using PUT and returns a <see cref="GraphResponse{AlertRule}"/> object.
        /// </summary>
        /// <param name="alertRuleToUpdate">The AlertRule object to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task of <see cref="GraphResponse{AlertRule}"/> to await.</returns>
        System.Threading.Tasks.Task<GraphResponse<AlertRule>> PutResponseAsync(AlertRule alertRuleToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="value">The expand value.</param>
        /// <returns>The request object to send.</returns>
        IAlertRuleRequest Expand(string value);

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="expandExpression">The expression from which to calculate the expand value.</param>
        /// <returns>The request object to send.</returns>
        IAlertRuleRequest Expand(Expression<Func<AlertRule, object>> expandExpression);

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="value">The select value.</param>
        /// <returns>The request object to send.</returns>
        IAlertRuleRequest Select(string value);

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="selectExpression">The expression from which to calculate the select value.</param>
        /// <returns>The request object to send.</returns>
        IAlertRuleRequest Select(Expression<Func<AlertRule, object>> selectExpression);

    }
}
