// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: MethodRequestBuilder.cs.tt

namespace Microsoft.Graph.SecurityNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type EdiscoveryReviewSetQueryExportRequestBuilder.
    /// </summary>
    public partial class EdiscoveryReviewSetQueryExportRequestBuilder : Microsoft.Graph.BaseActionMethodRequestBuilder<IEdiscoveryReviewSetQueryExportRequest>, IEdiscoveryReviewSetQueryExportRequestBuilder
    {
        /// <summary>
        /// Constructs a new <see cref="EdiscoveryReviewSetQueryExportRequestBuilder"/>.
        /// </summary>
        /// <param name="requestUrl">The URL for the request.</param>
        /// <param name="client">The <see cref="Microsoft.Graph.IBaseClient"/> for handling requests.</param>
        /// <param name="outputName">A outputName parameter for the OData method call.</param>
        /// <param name="description">A description parameter for the OData method call.</param>
        /// <param name="azureBlobContainer">A azureBlobContainer parameter for the OData method call.</param>
        /// <param name="azureBlobToken">A azureBlobToken parameter for the OData method call.</param>
        /// <param name="exportOptions">A exportOptions parameter for the OData method call.</param>
        /// <param name="exportStructure">A exportStructure parameter for the OData method call.</param>
        public EdiscoveryReviewSetQueryExportRequestBuilder(
            string requestUrl,
            Microsoft.Graph.IBaseClient client,
            string outputName,
            string description,
            string azureBlobContainer,
            string azureBlobToken,
            ExportOptions? exportOptions,
            ExportFileStructure? exportStructure)
            : base(requestUrl, client)
        {
            this.SetParameter("outputName", outputName, true);
            this.SetParameter("description", description, true);
            this.SetParameter("azureBlobContainer", azureBlobContainer, true);
            this.SetParameter("azureBlobToken", azureBlobToken, true);
            this.SetParameter("exportOptions", exportOptions, true);
            this.SetParameter("exportStructure", exportStructure, true);
        }

        /// <summary>
        /// A method used by the base class to construct a request class instance.
        /// </summary>
        /// <param name="functionUrl">The request URL to </param>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>An instance of a specific request class.</returns>
        protected override IEdiscoveryReviewSetQueryExportRequest CreateRequest(string functionUrl, IEnumerable<Microsoft.Graph.Option> options)
        {
            var request = new EdiscoveryReviewSetQueryExportRequest(functionUrl, this.Client, options);

            if (this.HasParameter("outputName"))
            {
                request.RequestBody.OutputName = this.GetParameter<string>("outputName");
            }

            if (this.HasParameter("description"))
            {
                request.RequestBody.Description = this.GetParameter<string>("description");
            }

            if (this.HasParameter("azureBlobContainer"))
            {
                request.RequestBody.AzureBlobContainer = this.GetParameter<string>("azureBlobContainer");
            }

            if (this.HasParameter("azureBlobToken"))
            {
                request.RequestBody.AzureBlobToken = this.GetParameter<string>("azureBlobToken");
            }

            if (this.HasParameter("exportOptions"))
            {
                request.RequestBody.ExportOptions = this.GetParameter<ExportOptions?>("exportOptions");
            }

            if (this.HasParameter("exportStructure"))
            {
                request.RequestBody.ExportStructure = this.GetParameter<ExportFileStructure?>("exportStructure");
            }

            return request;
        }
    }
}
