// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph.SecurityNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type SubmissionResult.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<SubmissionResult>))]
    public partial class SubmissionResult
    {

        /// <summary>
        /// Gets or sets category.
        /// The submission result category. The possible values are: notJunk, spam, phishing, malware, allowedByPolicy, blockedByPolicy, spoof, unknown, noResultAvailable and unkownFutureValue.
        /// </summary>
        [JsonPropertyName("category")]
        public SubmissionResultCategory? Category { get; set; }
    
        /// <summary>
        /// Gets or sets detail.
        /// Specifies the additional details provided by Microsoft to substantiate their analysis result.
        /// </summary>
        [JsonPropertyName("detail")]
        public SubmissionResultDetail? Detail { get; set; }
    
        /// <summary>
        /// Gets or sets detectedFiles.
        /// Specifies the files detected by Microsoft in the submitted emails.
        /// </summary>
        [JsonPropertyName("detectedFiles")]
        public IEnumerable<SubmissionDetectedFile> DetectedFiles { get; set; }
    
        /// <summary>
        /// Gets or sets detectedUrls.
        /// Specifes the URLs detected by Microsoft in the submitted email.
        /// </summary>
        [JsonPropertyName("detectedUrls")]
        public IEnumerable<string> DetectedUrls { get; set; }
    
        /// <summary>
        /// Gets or sets userMailboxSetting.
        /// Specifies the setting for user mailbox denoted by a comma-separated string.
        /// </summary>
        [JsonPropertyName("userMailboxSetting")]
        public UserMailboxSetting? UserMailboxSetting { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
