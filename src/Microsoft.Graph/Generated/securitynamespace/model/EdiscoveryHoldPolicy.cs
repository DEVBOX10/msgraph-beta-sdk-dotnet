// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.SecurityNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Ediscovery Hold Policy.
    /// </summary>
    public partial class EdiscoveryHoldPolicy : PolicyBase
    {
    
        ///<summary>
        /// The EdiscoveryHoldPolicy constructor
        ///</summary>
        public EdiscoveryHoldPolicy()
        {
            this.ODataType = "microsoft.graph.security.ediscoveryHoldPolicy";
        }

        /// <summary>
        /// Gets or sets content query.
        /// KQL query that specifies content to be held in the specified locations. To learn more, see Keyword queries and search conditions for Content Search and eDiscovery.  To hold all content in the specified locations, leave contentQuery blank.
        /// </summary>
        [JsonPropertyName("contentQuery")]
        public string ContentQuery { get; set; }
    
        /// <summary>
        /// Gets or sets errors.
        /// Lists any errors that happened while placing the hold.
        /// </summary>
        [JsonPropertyName("errors")]
        public IEnumerable<string> Errors { get; set; }
    
        /// <summary>
        /// Gets or sets is enabled.
        /// Indicates whether the hold is enabled and actively holding content.
        /// </summary>
        [JsonPropertyName("isEnabled")]
        public bool? IsEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets site sources.
        /// </summary>
        [JsonPropertyName("siteSources")]
        public IEdiscoveryHoldPolicySiteSourcesCollectionPage SiteSources { get; set; }

        /// <summary>
        /// Gets or sets siteSourcesNextLink.
        /// </summary>
        [JsonPropertyName("siteSources@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string SiteSourcesNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets user sources.
        /// </summary>
        [JsonPropertyName("userSources")]
        public IEdiscoveryHoldPolicyUserSourcesCollectionPage UserSources { get; set; }

        /// <summary>
        /// Gets or sets userSourcesNextLink.
        /// </summary>
        [JsonPropertyName("userSources@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string UserSourcesNextLink { get; set; }
    
    }
}

