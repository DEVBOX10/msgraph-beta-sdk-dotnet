// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph.SecurityNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type TopicModelingSettings.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<TopicModelingSettings>))]
    public partial class TopicModelingSettings
    {

        /// <summary>
        /// Gets or sets dynamicallyAdjustTopicCount.
        /// Indicates whether the themes model should dynamically optimize the number of generated topics. To learn more, see Adjust maximum number of themes dynamically.
        /// </summary>
        [JsonPropertyName("dynamicallyAdjustTopicCount")]
        public bool? DynamicallyAdjustTopicCount { get; set; }
    
        /// <summary>
        /// Gets or sets ignoreNumbers.
        /// Indicates whether the themes model should exclude numbers while parsing document texts. To learn more, see Include numbers in themes.
        /// </summary>
        [JsonPropertyName("ignoreNumbers")]
        public bool? IgnoreNumbers { get; set; }
    
        /// <summary>
        /// Gets or sets isEnabled.
        /// Indicates whether themes model is enabled for the case.
        /// </summary>
        [JsonPropertyName("isEnabled")]
        public bool? IsEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets topicCount.
        /// The total number of topics that the themes model will generate for a review set. To learn more, see Maximum number of themes.
        /// </summary>
        [JsonPropertyName("topicCount")]
        public Int32? TopicCount { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
