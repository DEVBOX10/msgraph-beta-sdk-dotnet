// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: MethodRequestBody.cs.tt

namespace Microsoft.Graph.WindowsUpdates
{
    using Newtonsoft.Json;
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;

    /// <summary>
    /// The type DeploymentAudienceUpdateAudienceByIdRequestBody.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class DeploymentAudienceUpdateAudienceByIdRequestBody
    {
    
        /// <summary>
        /// Gets or sets MemberEntityType.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "memberEntityType", Required = Newtonsoft.Json.Required.Default)]
        public string MemberEntityType { get; set; }
    
        /// <summary>
        /// Gets or sets AddMembers.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "addMembers", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> AddMembers { get; set; }
    
        /// <summary>
        /// Gets or sets RemoveMembers.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "removeMembers", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> RemoveMembers { get; set; }
    
        /// <summary>
        /// Gets or sets AddExclusions.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "addExclusions", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> AddExclusions { get; set; }
    
        /// <summary>
        /// Gets or sets RemoveExclusions.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "removeExclusions", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> RemoveExclusions { get; set; }
    
    }
}
