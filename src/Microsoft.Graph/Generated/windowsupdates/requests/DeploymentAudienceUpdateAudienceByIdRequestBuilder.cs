// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: MethodRequestBuilder.cs.tt

namespace Microsoft.Graph.WindowsUpdates
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type DeploymentAudienceUpdateAudienceByIdRequestBuilder.
    /// </summary>
    public partial class DeploymentAudienceUpdateAudienceByIdRequestBuilder : Microsoft.Graph.BaseActionMethodRequestBuilder<IDeploymentAudienceUpdateAudienceByIdRequest>, IDeploymentAudienceUpdateAudienceByIdRequestBuilder
    {
        /// <summary>
        /// Constructs a new <see cref="DeploymentAudienceUpdateAudienceByIdRequestBuilder"/>.
        /// </summary>
        /// <param name="requestUrl">The URL for the request.</param>
        /// <param name="client">The <see cref="Microsoft.Graph.IBaseClient"/> for handling requests.</param>
        /// <param name="memberEntityType">A memberEntityType parameter for the OData method call.</param>
        /// <param name="addMembers">A addMembers parameter for the OData method call.</param>
        /// <param name="removeMembers">A removeMembers parameter for the OData method call.</param>
        /// <param name="addExclusions">A addExclusions parameter for the OData method call.</param>
        /// <param name="removeExclusions">A removeExclusions parameter for the OData method call.</param>
        public DeploymentAudienceUpdateAudienceByIdRequestBuilder(
            string requestUrl,
            Microsoft.Graph.IBaseClient client,
            string memberEntityType,
            IEnumerable<string> addMembers,
            IEnumerable<string> removeMembers,
            IEnumerable<string> addExclusions,
            IEnumerable<string> removeExclusions)
            : base(requestUrl, client)
        {
            this.SetParameter("memberEntityType", memberEntityType, true);
            this.SetParameter("addMembers", addMembers, true);
            this.SetParameter("removeMembers", removeMembers, true);
            this.SetParameter("addExclusions", addExclusions, true);
            this.SetParameter("removeExclusions", removeExclusions, true);
        }

        /// <summary>
        /// A method used by the base class to construct a request class instance.
        /// </summary>
        /// <param name="functionUrl">The request URL to </param>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>An instance of a specific request class.</returns>
        protected override IDeploymentAudienceUpdateAudienceByIdRequest CreateRequest(string functionUrl, IEnumerable<Microsoft.Graph.Option> options)
        {
            var request = new DeploymentAudienceUpdateAudienceByIdRequest(functionUrl, this.Client, options);

            if (this.HasParameter("memberEntityType"))
            {
                request.RequestBody.MemberEntityType = this.GetParameter<string>("memberEntityType");
            }

            if (this.HasParameter("addMembers"))
            {
                request.RequestBody.AddMembers = this.GetParameter<IEnumerable<string>>("addMembers");
            }

            if (this.HasParameter("removeMembers"))
            {
                request.RequestBody.RemoveMembers = this.GetParameter<IEnumerable<string>>("removeMembers");
            }

            if (this.HasParameter("addExclusions"))
            {
                request.RequestBody.AddExclusions = this.GetParameter<IEnumerable<string>>("addExclusions");
            }

            if (this.HasParameter("removeExclusions"))
            {
                request.RequestBody.RemoveExclusions = this.GetParameter<IEnumerable<string>>("removeExclusions");
            }

            return request;
        }
    }
}
