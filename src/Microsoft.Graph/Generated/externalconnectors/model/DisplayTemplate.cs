// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph.ExternalConnectors
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type DisplayTemplate.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<DisplayTemplate>))]
    public partial class DisplayTemplate
    {

        /// <summary>
        /// Gets or sets id.
        /// The text identifier for the display template; for example, contosoTickets.
        /// </summary>
        [JsonPropertyName("id")]
        public string Id { get; set; }
    
        /// <summary>
        /// Gets or sets layout.
        /// The definition of the content's appearance, represented by an Adaptive Card, which is a JSON-serialized card object model.
        /// </summary>
        [JsonPropertyName("layout")]
        public System.Text.Json.JsonDocument Layout { get; set; }
    
        /// <summary>
        /// Gets or sets priority.
        /// Defines the priority of a display template. A display template with priority 1 is evaluated before a template with priority 4. Gaps in priority values are supported.
        /// </summary>
        [JsonPropertyName("priority")]
        public Int32? Priority { get; set; }
    
        /// <summary>
        /// Gets or sets rules.
        /// Specifies additional rules for selecting this display template based on the item schema. Optional.
        /// </summary>
        [JsonPropertyName("rules")]
        public IEnumerable<PropertyRule> Rules { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
