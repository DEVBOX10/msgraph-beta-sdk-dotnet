// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequestBuilder.cs.tt

namespace Microsoft.Graph.IdentityGovernanceNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type LifecycleWorkflowsContainerRequestBuilder.
    /// </summary>
    public partial class LifecycleWorkflowsContainerRequestBuilder : Microsoft.Graph.EntityRequestBuilder, ILifecycleWorkflowsContainerRequestBuilder
    {

        /// <summary>
        /// Constructs a new LifecycleWorkflowsContainerRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="Microsoft.Graph.IBaseClient"/> for handling requests.</param>
        public LifecycleWorkflowsContainerRequestBuilder(
            string requestUrl,
            Microsoft.Graph.IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new ILifecycleWorkflowsContainerRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new ILifecycleWorkflowsContainerRequest Request(IEnumerable<Microsoft.Graph.Option> options)
        {
            return new LifecycleWorkflowsContainerRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for CustomTaskExtensions.
        /// </summary>
        /// <returns>The <see cref="ILifecycleWorkflowsContainerCustomTaskExtensionsCollectionRequestBuilder"/>.</returns>
        public ILifecycleWorkflowsContainerCustomTaskExtensionsCollectionRequestBuilder CustomTaskExtensions
        {
            get
            {
                return new LifecycleWorkflowsContainerCustomTaskExtensionsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("customTaskExtensions"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeletedItems.
        /// </summary>
        /// <returns>The <see cref="Microsoft.Graph.IDeletedItemContainerRequestBuilder"/>.</returns>
        public Microsoft.Graph.IDeletedItemContainerRequestBuilder DeletedItems
        {
            get
            {
                return new Microsoft.Graph.DeletedItemContainerRequestBuilder(this.AppendSegmentToRequestUrl("deletedItems"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Settings.
        /// </summary>
        /// <returns>The <see cref="ILifecycleManagementSettingsRequestBuilder"/>.</returns>
        public ILifecycleManagementSettingsRequestBuilder Settings
        {
            get
            {
                return new LifecycleManagementSettingsRequestBuilder(this.AppendSegmentToRequestUrl("settings"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for TaskDefinitions.
        /// </summary>
        /// <returns>The <see cref="ILifecycleWorkflowsContainerTaskDefinitionsCollectionRequestBuilder"/>.</returns>
        public ILifecycleWorkflowsContainerTaskDefinitionsCollectionRequestBuilder TaskDefinitions
        {
            get
            {
                return new LifecycleWorkflowsContainerTaskDefinitionsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("taskDefinitions"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Workflows.
        /// </summary>
        /// <returns>The <see cref="ILifecycleWorkflowsContainerWorkflowsCollectionRequestBuilder"/>.</returns>
        public ILifecycleWorkflowsContainerWorkflowsCollectionRequestBuilder Workflows
        {
            get
            {
                return new LifecycleWorkflowsContainerWorkflowsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("workflows"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for WorkflowTemplates.
        /// </summary>
        /// <returns>The <see cref="ILifecycleWorkflowsContainerWorkflowTemplatesCollectionRequestBuilder"/>.</returns>
        public ILifecycleWorkflowsContainerWorkflowTemplatesCollectionRequestBuilder WorkflowTemplates
        {
            get
            {
                return new LifecycleWorkflowsContainerWorkflowTemplatesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("workflowTemplates"), this.Client);
            }
        }
    
    }
}
