// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequestBuilder.cs.tt

namespace Microsoft.Graph.IdentityGovernanceNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type TaskProcessingResultRequestBuilder.
    /// </summary>
    public partial class TaskProcessingResultRequestBuilder : Microsoft.Graph.EntityRequestBuilder, ITaskProcessingResultRequestBuilder
    {

        /// <summary>
        /// Constructs a new TaskProcessingResultRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="Microsoft.Graph.IBaseClient"/> for handling requests.</param>
        public TaskProcessingResultRequestBuilder(
            string requestUrl,
            Microsoft.Graph.IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new ITaskProcessingResultRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new ITaskProcessingResultRequest Request(IEnumerable<Microsoft.Graph.Option> options)
        {
            return new TaskProcessingResultRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for Subject.
        /// </summary>
        /// <returns>The <see cref="Microsoft.Graph.IUserWithReferenceRequestBuilder"/>.</returns>
        public Microsoft.Graph.IUserWithReferenceRequestBuilder Subject
        {
            get
            {
                return new Microsoft.Graph.UserWithReferenceRequestBuilder(this.AppendSegmentToRequestUrl("subject"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for @Task.
        /// </summary>
        /// <returns>The <see cref="ITaskWithReferenceRequestBuilder"/>.</returns>
        public ITaskWithReferenceRequestBuilder @Task
        {
            get
            {
                return new TaskWithReferenceRequestBuilder(this.AppendSegmentToRequestUrl("@Task"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for TaskProcessingResultResume.
        /// </summary>
        /// <returns>The <see cref="ITaskProcessingResultResumeRequestBuilder"/>.</returns>
        public ITaskProcessingResultResumeRequestBuilder Resume(
            CustomTaskExtensionCallbackData data,
            string source = null,
            string type = null)
        {
            return new TaskProcessingResultResumeRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.identityGovernance.resume"),
                this.Client,
                data,
                source,
                type);
        }
    
    }
}
