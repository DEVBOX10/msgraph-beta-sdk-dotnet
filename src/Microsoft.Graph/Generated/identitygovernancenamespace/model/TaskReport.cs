// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.IdentityGovernanceNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Task Report.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<TaskReport>))]
    public partial class TaskReport : Microsoft.Graph.Entity
    {
    
        /// <summary>
        /// Gets or sets completed date time.
        /// </summary>
        [JsonPropertyName("completedDateTime")]
        public DateTimeOffset? CompletedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets failed users count.
        /// </summary>
        [JsonPropertyName("failedUsersCount")]
        public Int32? FailedUsersCount { get; set; }
    
        /// <summary>
        /// Gets or sets last updated date time.
        /// </summary>
        [JsonPropertyName("lastUpdatedDateTime")]
        public DateTimeOffset? LastUpdatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets processing status.
        /// </summary>
        [JsonPropertyName("processingStatus")]
        public LifecycleWorkflowProcessingStatus? ProcessingStatus { get; set; }
    
        /// <summary>
        /// Gets or sets run id.
        /// </summary>
        [JsonPropertyName("runId")]
        public string RunId { get; set; }
    
        /// <summary>
        /// Gets or sets started date time.
        /// </summary>
        [JsonPropertyName("startedDateTime")]
        public DateTimeOffset? StartedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets successful users count.
        /// </summary>
        [JsonPropertyName("successfulUsersCount")]
        public Int32? SuccessfulUsersCount { get; set; }
    
        /// <summary>
        /// Gets or sets total users count.
        /// </summary>
        [JsonPropertyName("totalUsersCount")]
        public Int32? TotalUsersCount { get; set; }
    
        /// <summary>
        /// Gets or sets unprocessed users count.
        /// </summary>
        [JsonPropertyName("unprocessedUsersCount")]
        public Int32? UnprocessedUsersCount { get; set; }
    
        /// <summary>
        /// Gets or sets task.
        /// </summary>
        [JsonPropertyName("task")]
        public TaskObject @Task { get; set; }
    
        /// <summary>
        /// Gets or sets task definition.
        /// </summary>
        [JsonPropertyName("taskDefinition")]
        public TaskDefinition TaskDefinition { get; set; }
    
        /// <summary>
        /// Gets or sets task processing results.
        /// </summary>
        [JsonPropertyName("taskProcessingResults")]
        public ITaskReportTaskProcessingResultsCollectionPage TaskProcessingResults { get; set; }

        /// <summary>
        /// Gets or sets taskProcessingResultsNextLink.
        /// </summary>
        [JsonPropertyName("taskProcessingResults@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string TaskProcessingResultsNextLink { get; set; }
    
    }
}

