// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.IdentityGovernanceNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Workflow Template.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<WorkflowTemplate>))]
    public partial class WorkflowTemplate : Microsoft.Graph.Entity
    {
    
        /// <summary>
        /// Gets or sets category.
        /// </summary>
        [JsonPropertyName("category")]
        public LifecycleWorkflowCategory? Category { get; set; }
    
        /// <summary>
        /// Gets or sets description.
        /// </summary>
        [JsonPropertyName("description")]
        public string Description { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// </summary>
        [JsonPropertyName("displayName")]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets execution conditions.
        /// </summary>
        [JsonPropertyName("executionConditions")]
        public WorkflowExecutionConditions ExecutionConditions { get; set; }
    
        /// <summary>
        /// Gets or sets tasks.
        /// </summary>
        [JsonPropertyName("tasks")]
        public IWorkflowTemplateTasksCollectionPage Tasks { get; set; }

        /// <summary>
        /// Gets or sets tasksNextLink.
        /// </summary>
        [JsonPropertyName("tasks@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string TasksNextLink { get; set; }
    
    }
}

