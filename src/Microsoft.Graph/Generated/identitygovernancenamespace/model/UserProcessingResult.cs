// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.IdentityGovernanceNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type User Processing Result.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<UserProcessingResult>))]
    public partial class UserProcessingResult : Microsoft.Graph.Entity
    {
    
        /// <summary>
        /// Gets or sets completed date time.
        /// </summary>
        [JsonPropertyName("completedDateTime")]
        public DateTimeOffset? CompletedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets failed tasks count.
        /// </summary>
        [JsonPropertyName("failedTasksCount")]
        public Int32? FailedTasksCount { get; set; }
    
        /// <summary>
        /// Gets or sets processing status.
        /// </summary>
        [JsonPropertyName("processingStatus")]
        public LifecycleWorkflowProcessingStatus? ProcessingStatus { get; set; }
    
        /// <summary>
        /// Gets or sets scheduled date time.
        /// </summary>
        [JsonPropertyName("scheduledDateTime")]
        public DateTimeOffset? ScheduledDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets started date time.
        /// </summary>
        [JsonPropertyName("startedDateTime")]
        public DateTimeOffset? StartedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets total tasks count.
        /// </summary>
        [JsonPropertyName("totalTasksCount")]
        public Int32? TotalTasksCount { get; set; }
    
        /// <summary>
        /// Gets or sets total unprocessed tasks count.
        /// </summary>
        [JsonPropertyName("totalUnprocessedTasksCount")]
        public Int32? TotalUnprocessedTasksCount { get; set; }
    
        /// <summary>
        /// Gets or sets workflow execution type.
        /// </summary>
        [JsonPropertyName("workflowExecutionType")]
        public WorkflowExecutionType? WorkflowExecutionType { get; set; }
    
        /// <summary>
        /// Gets or sets workflow version.
        /// </summary>
        [JsonPropertyName("workflowVersion")]
        public Int32? WorkflowVersion { get; set; }
    
        /// <summary>
        /// Gets or sets subject.
        /// </summary>
        [JsonPropertyName("subject")]
        public Microsoft.Graph.User Subject { get; set; }
    
        /// <summary>
        /// Gets or sets task processing results.
        /// </summary>
        [JsonPropertyName("taskProcessingResults")]
        public IUserProcessingResultTaskProcessingResultsCollectionPage TaskProcessingResults { get; set; }

        /// <summary>
        /// Gets or sets taskProcessingResultsNextLink.
        /// </summary>
        [JsonPropertyName("taskProcessingResults@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string TaskProcessingResultsNextLink { get; set; }
    
    }
}

