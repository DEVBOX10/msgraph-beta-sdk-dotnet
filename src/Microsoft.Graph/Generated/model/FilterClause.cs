// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type FilterClause.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<FilterClause>))]
    public partial class FilterClause
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FilterClause"/> class.
        /// </summary>
        public FilterClause()
        {
            this.ODataType = "microsoft.graph.filterClause";
        }

        /// <summary>
        /// Gets or sets operatorName.
        /// Name of the operator to be applied to the source and target operands. Must be one of the supported operators. Supported operators can be discovered.
        /// </summary>
        [JsonPropertyName("operatorName")]
        public string OperatorName { get; set; }
    
        /// <summary>
        /// Gets or sets sourceOperandName.
        /// Name of source operand (the operand being tested). The source operand name must match one of the attribute names on the source object.
        /// </summary>
        [JsonPropertyName("sourceOperandName")]
        public string SourceOperandName { get; set; }
    
        /// <summary>
        /// Gets or sets targetOperand.
        /// Values that the source operand will be tested against.
        /// </summary>
        [JsonPropertyName("targetOperand")]
        public FilterOperand TargetOperand { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
