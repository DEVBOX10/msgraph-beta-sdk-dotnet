// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type TitleArea.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<TitleArea>))]
    public partial class TitleArea
    {

        /// <summary>
        /// Gets or sets alternativeText.
        /// Alternative text on the title area.
        /// </summary>
        [JsonPropertyName("alternativeText")]
        public string AlternativeText { get; set; }
    
        /// <summary>
        /// Gets or sets enableGradientEffect.
        /// Indicates whether the title area has a gradient effect enabled.
        /// </summary>
        [JsonPropertyName("enableGradientEffect")]
        public bool? EnableGradientEffect { get; set; }
    
        /// <summary>
        /// Gets or sets imageWebUrl.
        /// URL of the image in the title area.
        /// </summary>
        [JsonPropertyName("imageWebUrl")]
        public string ImageWebUrl { get; set; }
    
        /// <summary>
        /// Gets or sets layout.
        /// Enumeration value that indicates the layout of the title area. The possible values are: imageAndTitle, plain, colorBlock, overlap, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("layout")]
        public TitleAreaLayoutType? Layout { get; set; }
    
        /// <summary>
        /// Gets or sets serverProcessedContent.
        /// Contains collections of data that can be processed by server side services like search index and link fixup.
        /// </summary>
        [JsonPropertyName("serverProcessedContent")]
        public ServerProcessedContent ServerProcessedContent { get; set; }
    
        /// <summary>
        /// Gets or sets showAuthor.
        /// Indicates whether the author should be shown in title area.
        /// </summary>
        [JsonPropertyName("showAuthor")]
        public bool? ShowAuthor { get; set; }
    
        /// <summary>
        /// Gets or sets showPublishedDate.
        /// Indicates whether the published date should be shown in title area.
        /// </summary>
        [JsonPropertyName("showPublishedDate")]
        public bool? ShowPublishedDate { get; set; }
    
        /// <summary>
        /// Gets or sets showTextBlockAboveTitle.
        /// Indicates whether the text block above title should be shown in title area.
        /// </summary>
        [JsonPropertyName("showTextBlockAboveTitle")]
        public bool? ShowTextBlockAboveTitle { get; set; }
    
        /// <summary>
        /// Gets or sets textAboveTitle.
        /// The text above title line.
        /// </summary>
        [JsonPropertyName("textAboveTitle")]
        public string TextAboveTitle { get; set; }
    
        /// <summary>
        /// Gets or sets textAlignment.
        /// Enumeration value that indicates the text alignment of the title area. The possible values are: left, center, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("textAlignment")]
        public TitleAreaTextAlignmentType? TextAlignment { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
