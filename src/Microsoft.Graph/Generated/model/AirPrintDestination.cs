// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type AirPrintDestination.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<AirPrintDestination>))]
    public partial class AirPrintDestination
    {

        /// <summary>
        /// Gets or sets forceTls.
        /// If true AirPrint connections are secured by Transport Layer Security (TLS). Default is false. Available in iOS 11.0 and later.
        /// </summary>
        [JsonPropertyName("forceTls")]
        public bool? ForceTls { get; set; }
    
        /// <summary>
        /// Gets or sets ipAddress.
        /// The IP Address of the AirPrint destination.
        /// </summary>
        [JsonPropertyName("ipAddress")]
        public string IpAddress { get; set; }
    
        /// <summary>
        /// Gets or sets port.
        /// The listening port of the AirPrint destination. If this key is not specified AirPrint will use the default port. Available in iOS 11.0 and later.
        /// </summary>
        [JsonPropertyName("port")]
        public Int32? Port { get; set; }
    
        /// <summary>
        /// Gets or sets resourcePath.
        /// The Resource Path associated with the printer. This corresponds to the rp parameter of the _ipps.tcp Bonjour record. For example: printers/Canon_MG5300_series, printers/Xerox_Phaser_7600, ipp/print, Epson_IPP_Printer.
        /// </summary>
        [JsonPropertyName("resourcePath")]
        public string ResourcePath { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
