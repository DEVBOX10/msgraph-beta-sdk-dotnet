// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type BucketAggregationDefinition.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<BucketAggregationDefinition>))]
    public partial class BucketAggregationDefinition
    {

        /// <summary>
        /// Gets or sets isDescending.
        /// True to specify the sort order as descending. The default is false, with the sort order as ascending. Optional.
        /// </summary>
        [JsonPropertyName("isDescending")]
        public bool? IsDescending { get; set; }
    
        /// <summary>
        /// Gets or sets minimumCount.
        /// The minimum number of items that should be present in the aggregation to be returned in a bucket. Optional.
        /// </summary>
        [JsonPropertyName("minimumCount")]
        public Int32? MinimumCount { get; set; }
    
        /// <summary>
        /// Gets or sets prefixFilter.
        /// A filter to define a matching criteria. The key should start with the specified prefix to be returned in the response. Optional.
        /// </summary>
        [JsonPropertyName("prefixFilter")]
        public string PrefixFilter { get; set; }
    
        /// <summary>
        /// Gets or sets ranges.
        /// Specifies the manual ranges to compute the aggregations. This is only valid for non-string refiners of date or numeric type. Optional.
        /// </summary>
        [JsonPropertyName("ranges")]
        public IEnumerable<BucketAggregationRange> Ranges { get; set; }
    
        /// <summary>
        /// Gets or sets sortBy.
        /// The possible values are count to sort by the number of matches in the aggregation, keyAsStringto sort alphabeticaly based on the key in the aggregation, keyAsNumber for numerical sorting based on the key in the aggregation. Required.
        /// </summary>
        [JsonPropertyName("sortBy")]
        public BucketAggregationSortProperty? SortBy { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
