// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Windows Device Malware State.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<WindowsDeviceMalwareState>))]
    public partial class WindowsDeviceMalwareState : Entity
    {
    
		///<summary>
		/// The WindowsDeviceMalwareState constructor
		///</summary>
        public WindowsDeviceMalwareState()
        {
            this.ODataType = "microsoft.graph.windowsDeviceMalwareState";
        }
	
        /// <summary>
        /// Gets or sets additional information url.
        /// Information URL to learn more about the malware
        /// </summary>
        [JsonPropertyName("additionalInformationUrl")]
        public string AdditionalInformationUrl { get; set; }
    
        /// <summary>
        /// Gets or sets category.
        /// Category of the malware. Possible values are: invalid, adware, spyware, passwordStealer, trojanDownloader, worm, backdoor, remoteAccessTrojan, trojan, emailFlooder, keylogger, dialer, monitoringSoftware, browserModifier, cookie, browserPlugin, aolExploit, nuker, securityDisabler, jokeProgram, hostileActiveXControl, softwareBundler, stealthNotifier, settingsModifier, toolBar, remoteControlSoftware, trojanFtp, potentialUnwantedSoftware, icqExploit, trojanTelnet, exploit, filesharingProgram, malwareCreationTool, remote_Control_Software, tool, trojanDenialOfService, trojanDropper, trojanMassMailer, trojanMonitoringSoftware, trojanProxyServer, virus, known, unknown, spp, behavior, vulnerability, policy, enterpriseUnwantedSoftware, ransom, hipsRule.
        /// </summary>
        [JsonPropertyName("category")]
        public WindowsMalwareCategory? Category { get; set; }
    
        /// <summary>
        /// Gets or sets detection count.
        /// Number of times the malware is detected
        /// </summary>
        [JsonPropertyName("detectionCount")]
        public Int32? DetectionCount { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// Malware name
        /// </summary>
        [JsonPropertyName("displayName")]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets execution state.
        /// Execution status of the malware like blocked/executing etc. Possible values are: unknown, blocked, allowed, running, notRunning.
        /// </summary>
        [JsonPropertyName("executionState")]
        public WindowsMalwareExecutionState? ExecutionState { get; set; }
    
        /// <summary>
        /// Gets or sets initial detection date time.
        /// Initial detection datetime of the malware
        /// </summary>
        [JsonPropertyName("initialDetectionDateTime")]
        public DateTimeOffset? InitialDetectionDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets last state change date time.
        /// The last time this particular threat was changed
        /// </summary>
        [JsonPropertyName("lastStateChangeDateTime")]
        public DateTimeOffset? LastStateChangeDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets severity.
        /// Severity of the malware. Possible values are: unknown, low, moderate, high, severe.
        /// </summary>
        [JsonPropertyName("severity")]
        public WindowsMalwareSeverity? Severity { get; set; }
    
        /// <summary>
        /// Gets or sets state.
        /// Current status of the malware like cleaned/quarantined/allowed etc. Possible values are: unknown, detected, cleaned, quarantined, removed, allowed, blocked, cleanFailed, quarantineFailed, removeFailed, allowFailed, abandoned, blockFailed.
        /// </summary>
        [JsonPropertyName("state")]
        public WindowsMalwareState? State { get; set; }
    
        /// <summary>
        /// Gets or sets threat state.
        /// Current status of the malware like cleaned/quarantined/allowed etc. Possible values are: active, actionFailed, manualStepsRequired, fullScanRequired, rebootRequired, remediatedWithNonCriticalFailures, quarantined, removed, cleaned, allowed, noStatusCleared.
        /// </summary>
        [JsonPropertyName("threatState")]
        public WindowsMalwareThreatState? ThreatState { get; set; }
    
    }
}

