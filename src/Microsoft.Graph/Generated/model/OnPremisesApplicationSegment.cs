// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type OnPremisesApplicationSegment.
    /// </summary>
    [Obsolete("The onPremisesApplicationSegment type is deprecated and will being used on June 01, 2023. Please use the new applicationSegment type.")]
    [JsonConverter(typeof(DerivedTypeConverter<OnPremisesApplicationSegment>))]
    public partial class OnPremisesApplicationSegment
    {

        /// <summary>
        /// Gets or sets alternateUrl.
        /// If you're configuring a traffic manager in front of multiple App Proxy application segments, contains the user-friendly URL that will point to the traffic manager.
        /// </summary>
        [JsonPropertyName("alternateUrl")]
        public string AlternateUrl { get; set; }
    
        /// <summary>
        /// Gets or sets corsConfigurations.
        /// CORS Rule definition for a particular application segment.
        /// </summary>
        [JsonPropertyName("corsConfigurations")]
        public IEnumerable<CorsConfiguration> CorsConfigurations { get; set; }
    
        /// <summary>
        /// Gets or sets externalUrl.
        /// The published external URL for the application segment; for example, https://intranet.contoso.com./
        /// </summary>
        [JsonPropertyName("externalUrl")]
        public string ExternalUrl { get; set; }
    
        /// <summary>
        /// Gets or sets internalUrl.
        /// The internal URL of the application segment; for example, https://intranet/.
        /// </summary>
        [JsonPropertyName("internalUrl")]
        public string InternalUrl { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
