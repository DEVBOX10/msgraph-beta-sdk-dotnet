// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type DeviceScopeActionResult.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<DeviceScopeActionResult>))]
    public partial class DeviceScopeActionResult
    {

        /// <summary>
        /// Gets or sets deviceScopeAction.
        /// The triggered action name.
        /// </summary>
        [JsonPropertyName("deviceScopeAction")]
        public DeviceScopeAction? DeviceScopeAction { get; set; }
    
        /// <summary>
        /// Gets or sets deviceScopeId.
        /// The unique identifier of the device scope the action was triggered on.
        /// </summary>
        [JsonPropertyName("deviceScopeId")]
        public string DeviceScopeId { get; set; }
    
        /// <summary>
        /// Gets or sets failedMessage.
        /// The message indicates the reason the device scope action failed to trigger.
        /// </summary>
        [JsonPropertyName("failedMessage")]
        public string FailedMessage { get; set; }
    
        /// <summary>
        /// Gets or sets status.
        /// Indicates the status of the attempt device scope action. When succeeded, the action was succeessfully triggered, When failed, the action was failed to trigger.
        /// </summary>
        [JsonPropertyName("status")]
        public DeviceScopeActionStatus? Status { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
