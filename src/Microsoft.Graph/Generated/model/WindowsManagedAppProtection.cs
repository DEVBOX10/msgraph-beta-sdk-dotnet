// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Windows Managed App Protection.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<WindowsManagedAppProtection>))]
    public partial class WindowsManagedAppProtection : ManagedAppPolicy
    {
    
        ///<summary>
        /// The WindowsManagedAppProtection constructor
        ///</summary>
        public WindowsManagedAppProtection()
        {
            this.ODataType = "microsoft.graph.windowsManagedAppProtection";
        }

        /// <summary>
        /// Gets or sets allowed inbound data transfer sources.
        /// Indicates the sources from which data is allowed to be transferred. Some possible values are allApps or none. Possible values are: allApps, none.
        /// </summary>
        [JsonPropertyName("allowedInboundDataTransferSources")]
        public WindowsManagedAppDataTransferLevel? AllowedInboundDataTransferSources { get; set; }
    
        /// <summary>
        /// Gets or sets allowed outbound clipboard sharing level.
        /// Indicates the level to which the clipboard may be shared across org &amp; non-org resources. Some possible values are anyDestinationAnySource or none. Possible values are: anyDestinationAnySource, none.
        /// </summary>
        [JsonPropertyName("allowedOutboundClipboardSharingLevel")]
        public WindowsManagedAppClipboardSharingLevel? AllowedOutboundClipboardSharingLevel { get; set; }
    
        /// <summary>
        /// Gets or sets allowed outbound data transfer destinations.
        /// Indicates the destinations to which data is allowed to be transferred. Some possible values are allApps or none. Possible values are: allApps, none.
        /// </summary>
        [JsonPropertyName("allowedOutboundDataTransferDestinations")]
        public WindowsManagedAppDataTransferLevel? AllowedOutboundDataTransferDestinations { get; set; }
    
        /// <summary>
        /// Gets or sets app action if unable to authenticate user.
        /// If set, it will specify what action to take in the case where the user is unable to checkin because their authentication token is invalid. This happens when the user is deleted or disabled in AAD. Some possible values are block or wipe. If this property is not set, no action will be taken. Possible values are: block, wipe, warn.
        /// </summary>
        [JsonPropertyName("appActionIfUnableToAuthenticateUser")]
        public ManagedAppRemediationAction? AppActionIfUnableToAuthenticateUser { get; set; }
    
        /// <summary>
        /// Gets or sets deployed app count.
        /// Indicates the total number of applications for which the current policy is deployed.
        /// </summary>
        [JsonPropertyName("deployedAppCount")]
        public Int32? DeployedAppCount { get; set; }
    
        /// <summary>
        /// Gets or sets is assigned.
        /// When TRUE, indicates that the policy is deployed to some inclusion groups. When FALSE, indicates that the policy is not deployed to any inclusion groups. Default value is FALSE.
        /// </summary>
        [JsonPropertyName("isAssigned")]
        public bool? IsAssigned { get; set; }
    
        /// <summary>
        /// Gets or sets maximum allowed device threat level.
        /// Maximum allowed device threat level, as reported by the Mobile Threat Defense app. Possible values are: notConfigured, secured, low, medium, high.
        /// </summary>
        [JsonPropertyName("maximumAllowedDeviceThreatLevel")]
        public ManagedAppDeviceThreatLevel? MaximumAllowedDeviceThreatLevel { get; set; }
    
        /// <summary>
        /// Gets or sets maximum required os version.
        /// Versions bigger than the specified version will block the managed app from accessing company data. For example: '8.1.0' or '13.1.1'.
        /// </summary>
        [JsonPropertyName("maximumRequiredOsVersion")]
        public string MaximumRequiredOsVersion { get; set; }
    
        /// <summary>
        /// Gets or sets maximum warning os version.
        /// Versions bigger than the specified version will result in warning message on the managed app from accessing company data. For example: '8.1.0' or '13.1.1'.
        /// </summary>
        [JsonPropertyName("maximumWarningOsVersion")]
        public string MaximumWarningOsVersion { get; set; }
    
        /// <summary>
        /// Gets or sets maximum wipe os version.
        /// Versions bigger than the specified version will wipe the managed app and the associated company data. For example: '8.1.0' or '13.1.1'.
        /// </summary>
        [JsonPropertyName("maximumWipeOsVersion")]
        public string MaximumWipeOsVersion { get; set; }
    
        /// <summary>
        /// Gets or sets minimum required app version.
        /// Versions less than the specified version will block the managed app from accessing company data. For example: '8.1.0' or '13.1.1'.
        /// </summary>
        [JsonPropertyName("minimumRequiredAppVersion")]
        public string MinimumRequiredAppVersion { get; set; }
    
        /// <summary>
        /// Gets or sets minimum required os version.
        /// Versions less than the specified version will block the managed app from accessing company data. For example: '8.1.0' or '13.1.1'.
        /// </summary>
        [JsonPropertyName("minimumRequiredOsVersion")]
        public string MinimumRequiredOsVersion { get; set; }
    
        /// <summary>
        /// Gets or sets minimum required sdk version.
        /// Versions less than the specified version will block the managed app from accessing company data. For example: '8.1.0' or '13.1.1'.
        /// </summary>
        [JsonPropertyName("minimumRequiredSdkVersion")]
        public string MinimumRequiredSdkVersion { get; set; }
    
        /// <summary>
        /// Gets or sets minimum warning app version.
        /// Versions less than the specified version will result in warning message on the managed app from accessing company data. For example: '8.1.0' or '13.1.1'.
        /// </summary>
        [JsonPropertyName("minimumWarningAppVersion")]
        public string MinimumWarningAppVersion { get; set; }
    
        /// <summary>
        /// Gets or sets minimum warning os version.
        /// Versions less than the specified version will result in warning message on the managed app from accessing company data. For example: '8.1.0' or '13.1.1'.
        /// </summary>
        [JsonPropertyName("minimumWarningOsVersion")]
        public string MinimumWarningOsVersion { get; set; }
    
        /// <summary>
        /// Gets or sets minimum wipe app version.
        /// Versions less than the specified version will wipe the managed app and the associated company data. For example: '8.1.0' or '13.1.1'.
        /// </summary>
        [JsonPropertyName("minimumWipeAppVersion")]
        public string MinimumWipeAppVersion { get; set; }
    
        /// <summary>
        /// Gets or sets minimum wipe os version.
        /// Versions less than the specified version will wipe the managed app and the associated company data. For example: '8.1.0' or '13.1.1'.
        /// </summary>
        [JsonPropertyName("minimumWipeOsVersion")]
        public string MinimumWipeOsVersion { get; set; }
    
        /// <summary>
        /// Gets or sets minimum wipe sdk version.
        /// Versions less than the specified version will wipe the managed app and the associated company data. For example: '8.1.0' or '13.1.1'.
        /// </summary>
        [JsonPropertyName("minimumWipeSdkVersion")]
        public string MinimumWipeSdkVersion { get; set; }
    
        /// <summary>
        /// Gets or sets mobile threat defense remediation action.
        /// Determines what action to take if the mobile threat defense threat threshold isn't met. Some possible values are block or wipe. Warn isn't a supported value for this property. Possible values are: block, wipe, warn.
        /// </summary>
        [JsonPropertyName("mobileThreatDefenseRemediationAction")]
        public ManagedAppRemediationAction? MobileThreatDefenseRemediationAction { get; set; }
    
        /// <summary>
        /// Gets or sets period offline before access check.
        /// The period after which access is checked when the device is not connected to the internet. For example, PT5M indicates that the interval is 5 minutes in duration. A timespan value of PT0S indicates that access will be blocked immediately when the device is not connected to the internet.
        /// </summary>
        [JsonPropertyName("periodOfflineBeforeAccessCheck")]
        public Duration PeriodOfflineBeforeAccessCheck { get; set; }
    
        /// <summary>
        /// Gets or sets period offline before wipe is enforced.
        /// The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped. For example, P5D indicates that the interval is 5 days in duration. A timespan value of PT0S indicates that managed data will never be wiped when the device is not connected to the internet.
        /// </summary>
        [JsonPropertyName("periodOfflineBeforeWipeIsEnforced")]
        public Duration PeriodOfflineBeforeWipeIsEnforced { get; set; }
    
        /// <summary>
        /// Gets or sets print blocked.
        /// When TRUE, indicates that printing is blocked from managed apps. When FALSE, indicates that printing is allowed from managed apps. Default value is FALSE.
        /// </summary>
        [JsonPropertyName("printBlocked")]
        public bool? PrintBlocked { get; set; }
    
        /// <summary>
        /// Gets or sets apps.
        /// List of apps to which the policy is deployed.
        /// </summary>
        [JsonPropertyName("apps")]
        public IWindowsManagedAppProtectionAppsCollectionPage Apps { get; set; }

        /// <summary>
        /// Gets or sets appsNextLink.
        /// </summary>
        [JsonPropertyName("apps@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string AppsNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets assignments.
        /// Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
        /// </summary>
        [JsonPropertyName("assignments")]
        public IWindowsManagedAppProtectionAssignmentsCollectionPage Assignments { get; set; }

        /// <summary>
        /// Gets or sets assignmentsNextLink.
        /// </summary>
        [JsonPropertyName("assignments@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string AssignmentsNextLink { get; set; }
    
    }
}

