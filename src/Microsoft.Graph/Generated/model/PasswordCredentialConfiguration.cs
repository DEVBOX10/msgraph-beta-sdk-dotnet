// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type PasswordCredentialConfiguration.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<PasswordCredentialConfiguration>))]
    public partial class PasswordCredentialConfiguration
    {

        /// <summary>
        /// Gets or sets maxLifetime.
        /// </summary>
        [JsonPropertyName("maxLifetime")]
        public Duration MaxLifetime { get; set; }
    
        /// <summary>
        /// Gets or sets restrictForAppsCreatedAfterDateTime.
        /// Enforces the policy for an app created on or after the enforcement date. For existing applications, the enforcement date would be backdated. To apply to all applications, this date would be null.
        /// </summary>
        [JsonPropertyName("restrictForAppsCreatedAfterDateTime")]
        public DateTimeOffset? RestrictForAppsCreatedAfterDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets restrictionType.
        /// The type of restriction being applied. The possible values are: passwordAddition, passwordLifetime, symmetricKeyAddition, symmetricKeyLifetime,customPasswordAddition, unknownFutureValue. Each value of restrictionType can be used only once per policy.
        /// </summary>
        [JsonPropertyName("restrictionType")]
        public AppCredentialRestrictionType? RestrictionType { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
