// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type DataProcessorServiceForWindowsFeaturesOnboarding.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<DataProcessorServiceForWindowsFeaturesOnboarding>))]
    public partial class DataProcessorServiceForWindowsFeaturesOnboarding
    {

        /// <summary>
        /// Gets or sets areDataProcessorServiceForWindowsFeaturesEnabled.
        /// Indicates whether the tenant has enabled MEM features utilizing Data Processor Service for Windows (DPSW) data. When TRUE, the tenant has enabled MEM features utilizing Data Processor Service for Windows (DPSW) data. When FALSE, the tenant has not enabled MEM features utilizing Data Processor Service for Windows (DPSW) data. Default value is FALSE.
        /// </summary>
        [JsonPropertyName("areDataProcessorServiceForWindowsFeaturesEnabled")]
        public bool? AreDataProcessorServiceForWindowsFeaturesEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets hasValidWindowsLicense.
        /// Indicates whether the tenant has required Windows license. When TRUE, the tenant has the required Windows license. When FALSE, the tenant does not have the required Windows license. Default value is FALSE.
        /// </summary>
        [JsonPropertyName("hasValidWindowsLicense")]
        public bool? HasValidWindowsLicense { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
