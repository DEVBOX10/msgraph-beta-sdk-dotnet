// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type AccessReviewSettings.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<AccessReviewSettings>))]
    public partial class AccessReviewSettings
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AccessReviewSettings"/> class.
        /// </summary>
        public AccessReviewSettings()
        {
            this.ODataType = "microsoft.graph.accessReviewSettings";
        }

        /// <summary>
        /// Gets or sets accessRecommendationsEnabled.
        /// Indicates whether showing recommendations to reviewers is enabled.
        /// </summary>
        [JsonPropertyName("accessRecommendationsEnabled")]
        public bool? AccessRecommendationsEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets activityDurationInDays.
        /// The number of days of user activities to show to reviewers.
        /// </summary>
        [JsonPropertyName("activityDurationInDays")]
        public Int32? ActivityDurationInDays { get; set; }
    
        /// <summary>
        /// Gets or sets autoApplyReviewResultsEnabled.
        /// Indicates whether the auto-apply capability, to automatically change the target object access resource, is enabled.  If not enabled, a user must, after the review completes, apply the access review.
        /// </summary>
        [JsonPropertyName("autoApplyReviewResultsEnabled")]
        public bool? AutoApplyReviewResultsEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets autoReviewEnabled.
        /// Indicates whether a decision should be set if the reviewer did not supply one. For use when auto-apply is enabled. If you don't want to have a review decision recorded unless the reviewer makes an explicit choice, set it to false.
        /// </summary>
        [JsonPropertyName("autoReviewEnabled")]
        public bool? AutoReviewEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets autoReviewSettings.
        /// Detailed settings for how the feature should set the review decision. For use when auto-apply is enabled.
        /// </summary>
        [JsonPropertyName("autoReviewSettings")]
        public AutoReviewSettings AutoReviewSettings { get; set; }
    
        /// <summary>
        /// Gets or sets justificationRequiredOnApproval.
        /// Indicates whether reviewers are required to provide a justification when reviewing access.
        /// </summary>
        [JsonPropertyName("justificationRequiredOnApproval")]
        public bool? JustificationRequiredOnApproval { get; set; }
    
        /// <summary>
        /// Gets or sets mailNotificationsEnabled.
        /// Indicates whether sending mails to reviewers and the review creator is enabled.
        /// </summary>
        [JsonPropertyName("mailNotificationsEnabled")]
        public bool? MailNotificationsEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets recurrenceSettings.
        /// Detailed settings for recurrence.
        /// </summary>
        [JsonPropertyName("recurrenceSettings")]
        public AccessReviewRecurrenceSettings RecurrenceSettings { get; set; }
    
        /// <summary>
        /// Gets or sets remindersEnabled.
        /// Indicates whether sending reminder emails to reviewers is enabled.
        /// </summary>
        [JsonPropertyName("remindersEnabled")]
        public bool? RemindersEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
