// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type MacOSKerberosSingleSignOnExtension.
    /// </summary>
    public partial class MacOSKerberosSingleSignOnExtension : MacOSSingleSignOnExtension
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MacOSKerberosSingleSignOnExtension"/> class.
        /// </summary>
        public MacOSKerberosSingleSignOnExtension()
        {
            this.ODataType = "microsoft.graph.macOSKerberosSingleSignOnExtension";
        }

        /// <summary>
        /// Gets or sets activeDirectorySiteCode.
        /// Gets or sets the Active Directory site.
        /// </summary>
        [JsonPropertyName("activeDirectorySiteCode")]
        public string ActiveDirectorySiteCode { get; set; }
    
        /// <summary>
        /// Gets or sets blockActiveDirectorySiteAutoDiscovery.
        /// Enables or disables whether the Kerberos extension can automatically determine its site name.
        /// </summary>
        [JsonPropertyName("blockActiveDirectorySiteAutoDiscovery")]
        public bool? BlockActiveDirectorySiteAutoDiscovery { get; set; }
    
        /// <summary>
        /// Gets or sets blockAutomaticLogin.
        /// Enables or disables Keychain usage.
        /// </summary>
        [JsonPropertyName("blockAutomaticLogin")]
        public bool? BlockAutomaticLogin { get; set; }
    
        /// <summary>
        /// Gets or sets cacheName.
        /// Gets or sets the Generic Security Services name of the Kerberos cache to use for this profile.
        /// </summary>
        [JsonPropertyName("cacheName")]
        public string CacheName { get; set; }
    
        /// <summary>
        /// Gets or sets credentialBundleIdAccessControlList.
        /// Gets or sets a list of app Bundle IDs allowed to access the Kerberos Ticket Granting Ticket.
        /// </summary>
        [JsonPropertyName("credentialBundleIdAccessControlList")]
        public IEnumerable<string> CredentialBundleIdAccessControlList { get; set; }
    
        /// <summary>
        /// Gets or sets credentialsCacheMonitored.
        /// When set to True, the credential is requested on the next matching Kerberos challenge or network state change. When the credential is expired or missing, a new credential is created. Available for devices running macOS versions 12 and later.
        /// </summary>
        [JsonPropertyName("credentialsCacheMonitored")]
        public bool? CredentialsCacheMonitored { get; set; }
    
        /// <summary>
        /// Gets or sets domainRealms.
        /// Gets or sets a list of realms for custom domain-realm mapping. Realms are case sensitive.
        /// </summary>
        [JsonPropertyName("domainRealms")]
        public IEnumerable<string> DomainRealms { get; set; }
    
        /// <summary>
        /// Gets or sets domains.
        /// Gets or sets a list of hosts or domain names for which the app extension performs SSO.
        /// </summary>
        [JsonPropertyName("domains")]
        public IEnumerable<string> Domains { get; set; }
    
        /// <summary>
        /// Gets or sets isDefaultRealm.
        /// When true, this profile's realm will be selected as the default. Necessary if multiple Kerberos-type profiles are configured.
        /// </summary>
        [JsonPropertyName("isDefaultRealm")]
        public bool? IsDefaultRealm { get; set; }
    
        /// <summary>
        /// Gets or sets kerberosAppsInBundleIdACLIncluded.
        /// When set to True, the Kerberos extension allows any apps entered with the app bundle ID, managed apps, and standard Kerberos utilities, such as TicketViewer and klist, to access and use the credential. Available for devices running macOS versions 12 and later.
        /// </summary>
        [JsonPropertyName("kerberosAppsInBundleIdACLIncluded")]
        public bool? KerberosAppsInBundleIdACLIncluded { get; set; }
    
        /// <summary>
        /// Gets or sets managedAppsInBundleIdACLIncluded.
        /// When set to True, the Kerberos extension allows managed apps, and any apps entered with the app bundle ID to access the credential. When set to False, the Kerberos extension allows all apps to access the credential. Available for devices running iOS and iPadOS versions 14 and later.
        /// </summary>
        [JsonPropertyName("managedAppsInBundleIdACLIncluded")]
        public bool? ManagedAppsInBundleIdACLIncluded { get; set; }
    
        /// <summary>
        /// Gets or sets modeCredentialUsed.
        /// Select how other processes use the Kerberos Extension credential.
        /// </summary>
        [JsonPropertyName("modeCredentialUsed")]
        public string ModeCredentialUsed { get; set; }
    
        /// <summary>
        /// Gets or sets passwordBlockModification.
        /// Enables or disables password changes.
        /// </summary>
        [JsonPropertyName("passwordBlockModification")]
        public bool? PasswordBlockModification { get; set; }
    
        /// <summary>
        /// Gets or sets passwordChangeUrl.
        /// Gets or sets the URL that the user will be sent to when they initiate a password change.
        /// </summary>
        [JsonPropertyName("passwordChangeUrl")]
        public string PasswordChangeUrl { get; set; }
    
        /// <summary>
        /// Gets or sets passwordEnableLocalSync.
        /// Enables or disables password syncing. This won't affect users logged in with a mobile account on macOS.
        /// </summary>
        [JsonPropertyName("passwordEnableLocalSync")]
        public bool? PasswordEnableLocalSync { get; set; }
    
        /// <summary>
        /// Gets or sets passwordExpirationDays.
        /// Overrides the default password expiration in days. For most domains, this value is calculated automatically.
        /// </summary>
        [JsonPropertyName("passwordExpirationDays")]
        public Int32? PasswordExpirationDays { get; set; }
    
        /// <summary>
        /// Gets or sets passwordExpirationNotificationDays.
        /// Gets or sets the number of days until the user is notified that their password will expire (default is 15).
        /// </summary>
        [JsonPropertyName("passwordExpirationNotificationDays")]
        public Int32? PasswordExpirationNotificationDays { get; set; }
    
        /// <summary>
        /// Gets or sets passwordMinimumAgeDays.
        /// Gets or sets the minimum number of days until a user can change their password again.
        /// </summary>
        [JsonPropertyName("passwordMinimumAgeDays")]
        public Int32? PasswordMinimumAgeDays { get; set; }
    
        /// <summary>
        /// Gets or sets passwordMinimumLength.
        /// Gets or sets the minimum length of a password.
        /// </summary>
        [JsonPropertyName("passwordMinimumLength")]
        public Int32? PasswordMinimumLength { get; set; }
    
        /// <summary>
        /// Gets or sets passwordPreviousPasswordBlockCount.
        /// Gets or sets the number of previous passwords to block.
        /// </summary>
        [JsonPropertyName("passwordPreviousPasswordBlockCount")]
        public Int32? PasswordPreviousPasswordBlockCount { get; set; }
    
        /// <summary>
        /// Gets or sets passwordRequireActiveDirectoryComplexity.
        /// Enables or disables whether passwords must meet Active Directory's complexity requirements.
        /// </summary>
        [JsonPropertyName("passwordRequireActiveDirectoryComplexity")]
        public bool? PasswordRequireActiveDirectoryComplexity { get; set; }
    
        /// <summary>
        /// Gets or sets passwordRequirementsDescription.
        /// Gets or sets a description of the password complexity requirements.
        /// </summary>
        [JsonPropertyName("passwordRequirementsDescription")]
        public string PasswordRequirementsDescription { get; set; }
    
        /// <summary>
        /// Gets or sets preferredKDCs.
        /// Add creates an ordered list of preferred Key Distribution Centers (KDCs) to use for Kerberos traffic. This list is used when the servers are not discoverable using DNS. When the servers are discoverable, the list is used for both connectivity checks, and used first for Kerberos traffic. If the servers donâ€™t respond, then the device uses DNS discovery. Delete removes an existing list, and devices use DNS discovery. Available for devices running macOS versions 12 and later.
        /// </summary>
        [JsonPropertyName("preferredKDCs")]
        public IEnumerable<string> PreferredKDCs { get; set; }
    
        /// <summary>
        /// Gets or sets realm.
        /// Gets or sets the case-sensitive realm name for this profile.
        /// </summary>
        [JsonPropertyName("realm")]
        public string Realm { get; set; }
    
        /// <summary>
        /// Gets or sets requireUserPresence.
        /// Gets or sets whether to require authentication via Touch ID, Face ID, or a passcode to access the keychain entry.
        /// </summary>
        [JsonPropertyName("requireUserPresence")]
        public bool? RequireUserPresence { get; set; }
    
        /// <summary>
        /// Gets or sets signInHelpText.
        /// Text displayed to the user at the Kerberos sign in window. Available for devices running iOS and iPadOS versions 14 and later.
        /// </summary>
        [JsonPropertyName("signInHelpText")]
        public string SignInHelpText { get; set; }
    
        /// <summary>
        /// Gets or sets singleSignOnExtensionPreferredKDCs.
        /// Soon to be deprecated.
        /// </summary>
        [JsonPropertyName("singleSignOnExtensionPreferredKDCs")]
        public IEnumerable<string> SingleSignOnExtensionPreferredKDCs { get; set; }
    
        /// <summary>
        /// Gets or sets tlsForLDAPRequired.
        /// When set to True, LDAP connections are required to use Transport Layer Security (TLS). Available for devices running macOS versions 11 and later.
        /// </summary>
        [JsonPropertyName("tlsForLDAPRequired")]
        public bool? TlsForLDAPRequired { get; set; }
    
        /// <summary>
        /// Gets or sets usernameLabelCustom.
        /// This label replaces the user name shown in the Kerberos extension. You can enter a name to match the name of your company or organization. Available for devices running macOS versions 11 and later.
        /// </summary>
        [JsonPropertyName("usernameLabelCustom")]
        public string UsernameLabelCustom { get; set; }
    
        /// <summary>
        /// Gets or sets usernameLableCustom.
        /// Soon to be deprecated.
        /// </summary>
        [JsonPropertyName("usernameLableCustom")]
        public string UsernameLableCustom { get; set; }
    
        /// <summary>
        /// Gets or sets userPrincipalName.
        /// Gets or sets the principle user name to use for this profile. The realm name does not need to be included.
        /// </summary>
        [JsonPropertyName("userPrincipalName")]
        public string UserPrincipalName { get; set; }
    
        /// <summary>
        /// Gets or sets userSetupDelayed.
        /// When set to True, the user isnâ€™t prompted to set up the Kerberos extension until the extension is enabled by the admin, or a Kerberos challenge is received. Available for devices running macOS versions 11 and later.
        /// </summary>
        [JsonPropertyName("userSetupDelayed")]
        public bool? UserSetupDelayed { get; set; }
    
    }
}
