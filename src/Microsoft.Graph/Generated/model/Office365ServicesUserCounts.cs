// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Office365Services User Counts.
    /// </summary>
    public partial class Office365ServicesUserCounts : Entity
    {
    
		///<summary>
		/// The Office365ServicesUserCounts constructor
		///</summary>
        public Office365ServicesUserCounts()
        {
            this.ODataType = "microsoft.graph.office365ServicesUserCounts";
        }
	
        /// <summary>
        /// Gets or sets exchange active.
        /// The number of active users on Exchange. Any user who can read and send email is considered an active user.
        /// </summary>
        [JsonPropertyName("exchangeActive")]
        public Int64? ExchangeActive { get; set; }
    
        /// <summary>
        /// Gets or sets exchange inactive.
        /// The number of inactive users on Exchange.
        /// </summary>
        [JsonPropertyName("exchangeInactive")]
        public Int64? ExchangeInactive { get; set; }
    
        /// <summary>
        /// Gets or sets office365active.
        /// The number of active users on Microsoft 365.
        /// </summary>
        [JsonPropertyName("office365Active")]
        public Int64? Office365Active { get; set; }
    
        /// <summary>
        /// Gets or sets office365inactive.
        /// The number of inactive users on Microsoft 365.
        /// </summary>
        [JsonPropertyName("office365Inactive")]
        public Int64? Office365Inactive { get; set; }
    
        /// <summary>
        /// Gets or sets one drive active.
        /// The number of active users on OneDrive. Any user who viewed or edited files, shared files internally or externally, or synced files is considered an active user.
        /// </summary>
        [JsonPropertyName("oneDriveActive")]
        public Int64? OneDriveActive { get; set; }
    
        /// <summary>
        /// Gets or sets one drive inactive.
        /// The number of inactive users on OneDrive.
        /// </summary>
        [JsonPropertyName("oneDriveInactive")]
        public Int64? OneDriveInactive { get; set; }
    
        /// <summary>
        /// Gets or sets report period.
        /// The number of days the report covers.
        /// </summary>
        [JsonPropertyName("reportPeriod")]
        public string ReportPeriod { get; set; }
    
        /// <summary>
        /// Gets or sets report refresh date.
        /// The latest date of the content.
        /// </summary>
        [JsonPropertyName("reportRefreshDate")]
        public Date ReportRefreshDate { get; set; }
    
        /// <summary>
        /// Gets or sets share point active.
        /// The number of active users on SharePoint. Any user who viewed or edited files, shared files internally or externally, synced files, or viewed SharePoint pages is considered an active user.
        /// </summary>
        [JsonPropertyName("sharePointActive")]
        public Int64? SharePointActive { get; set; }
    
        /// <summary>
        /// Gets or sets share point inactive.
        /// The number of inactive users on SharePoint.
        /// </summary>
        [JsonPropertyName("sharePointInactive")]
        public Int64? SharePointInactive { get; set; }
    
        /// <summary>
        /// Gets or sets skype for business active.
        /// The number of active users on Skype For Business. Any user who organized or participated in conferences, or joined peer-to-peer sessions is considered an active user.
        /// </summary>
        [JsonPropertyName("skypeForBusinessActive")]
        public Int64? SkypeForBusinessActive { get; set; }
    
        /// <summary>
        /// Gets or sets skype for business inactive.
        /// The number of inactive users on Skype For Business.
        /// </summary>
        [JsonPropertyName("skypeForBusinessInactive")]
        public Int64? SkypeForBusinessInactive { get; set; }
    
        /// <summary>
        /// Gets or sets teams active.
        /// The number of active users on Microsoft Teams. Any user who posted messages in team channels, sent messages in private chat sessions, or participated in meetings or calls is considered an active user.
        /// </summary>
        [JsonPropertyName("teamsActive")]
        public Int64? TeamsActive { get; set; }
    
        /// <summary>
        /// Gets or sets teams inactive.
        /// The number of inactive users on Microsoft Teams.
        /// </summary>
        [JsonPropertyName("teamsInactive")]
        public Int64? TeamsInactive { get; set; }
    
        /// <summary>
        /// Gets or sets yammer active.
        /// The number of active users on Yammer. Any user who can post, read, or like messages is considered an active user.
        /// </summary>
        [JsonPropertyName("yammerActive")]
        public Int64? YammerActive { get; set; }
    
        /// <summary>
        /// Gets or sets yammer inactive.
        /// The number of inactive users on Yammer.
        /// </summary>
        [JsonPropertyName("yammerInactive")]
        public Int64? YammerInactive { get; set; }
    
    }
}

