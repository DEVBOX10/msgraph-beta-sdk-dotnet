// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Microsoft Tunnel Server.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<MicrosoftTunnelServer>))]
    public partial class MicrosoftTunnelServer : Entity
    {
    
        /// <summary>
        /// Gets or sets agent image digest.
        /// The digest of the current agent image running on this server
        /// </summary>
        [JsonPropertyName("agentImageDigest")]
        public string AgentImageDigest { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// The display name for the server. This property is required when a server is created and cannot be cleared during updates.
        /// </summary>
        [JsonPropertyName("displayName")]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets last checkin date time.
        /// Indicates when the server last checked in
        /// </summary>
        [JsonPropertyName("lastCheckinDateTime")]
        public DateTimeOffset? LastCheckinDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets server image digest.
        /// The digest of the current server image running on this server
        /// </summary>
        [JsonPropertyName("serverImageDigest")]
        public string ServerImageDigest { get; set; }
    
        /// <summary>
        /// Gets or sets tunnel server health status.
        /// Indicates the server's health Status as of the last evaluation time. Health is evaluated every 60 seconds, and the possible values are: unknown, healthy, unhealthy, warning, offline, upgradeInProgress, upgradeFailed. Possible values are: unknown, healthy, unhealthy, warning, offline, upgradeInProgress, upgradeFailed, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("tunnelServerHealthStatus")]
        public MicrosoftTunnelServerHealthStatus? TunnelServerHealthStatus { get; set; }
    
    }
}

