// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type LoginPageLayoutConfiguration.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<LoginPageLayoutConfiguration>))]
    public partial class LoginPageLayoutConfiguration
    {

        /// <summary>
        /// Gets or sets isFooterShown.
        /// Option to show the footer on the sign-in page.
        /// </summary>
        [JsonPropertyName("isFooterShown")]
        public bool? IsFooterShown { get; set; }
    
        /// <summary>
        /// Gets or sets isHeaderShown.
        /// Option to show the header on the sign-in page.
        /// </summary>
        [JsonPropertyName("isHeaderShown")]
        public bool? IsHeaderShown { get; set; }
    
        /// <summary>
        /// Gets or sets layoutTemplateType.
        /// Represents the layout template to be displayed on the login page for a tenant. The possible values are  default - Represents the default Microsoft layout with a centered lightbox.  verticalSplit - Represents a layout with a backgound on the left side and a full-height lightbox to the right.  unknownFutureValue - Evolvable enumeration sentinel value. Do not use.
        /// </summary>
        [JsonPropertyName("layoutTemplateType")]
        public LayoutTemplateType? LayoutTemplateType { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
