// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type PasswordSingleSignOnField.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<PasswordSingleSignOnField>))]
    public partial class PasswordSingleSignOnField
    {

        /// <summary>
        /// Gets or sets customizedLabel.
        /// Title/label override for customization.
        /// </summary>
        [JsonPropertyName("customizedLabel")]
        public string CustomizedLabel { get; set; }
    
        /// <summary>
        /// Gets or sets defaultLabel.
        /// Label that would be used if no customizedLabel is provided. Read only.
        /// </summary>
        [JsonPropertyName("defaultLabel")]
        public string DefaultLabel { get; set; }
    
        /// <summary>
        /// Gets or sets fieldId.
        /// Id used to identity the field type. This is an internal id and possible values are param_1, param_2, param_userName, param_password.
        /// </summary>
        [JsonPropertyName("fieldId")]
        public string FieldId { get; set; }
    
        /// <summary>
        /// Gets or sets type.
        /// Type of the credential. The values can be text, password.
        /// </summary>
        [JsonPropertyName("type")]
        public string Type { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
