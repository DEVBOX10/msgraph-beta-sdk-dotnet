// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type CertificateConnectorSetting.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<CertificateConnectorSetting>))]
    public partial class CertificateConnectorSetting
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CertificateConnectorSetting"/> class.
        /// </summary>
        public CertificateConnectorSetting()
        {
            this.ODataType = "microsoft.graph.certificateConnectorSetting";
        }

        /// <summary>
        /// Gets or sets certExpiryTime.
        /// Certificate expire time
        /// </summary>
        [JsonPropertyName("certExpiryTime")]
        public DateTimeOffset? CertExpiryTime { get; set; }
    
        /// <summary>
        /// Gets or sets connectorVersion.
        /// Version of certificate connector
        /// </summary>
        [JsonPropertyName("connectorVersion")]
        public string ConnectorVersion { get; set; }
    
        /// <summary>
        /// Gets or sets enrollmentError.
        /// Certificate connector enrollment error
        /// </summary>
        [JsonPropertyName("enrollmentError")]
        public string EnrollmentError { get; set; }
    
        /// <summary>
        /// Gets or sets lastConnectorConnectionTime.
        /// Last time certificate connector connected
        /// </summary>
        [JsonPropertyName("lastConnectorConnectionTime")]
        public DateTimeOffset? LastConnectorConnectionTime { get; set; }
    
        /// <summary>
        /// Gets or sets lastUploadVersion.
        /// Version of last uploaded certificate connector
        /// </summary>
        [JsonPropertyName("lastUploadVersion")]
        public Int64? LastUploadVersion { get; set; }
    
        /// <summary>
        /// Gets or sets status.
        /// Certificate connector status
        /// </summary>
        [JsonPropertyName("status")]
        public Int32? Status { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
