// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Android For Work Enterprise Wi Fi Configuration.
    /// </summary>
    
    public partial class AndroidForWorkEnterpriseWiFiConfiguration : AndroidForWorkWiFiConfiguration
    {
    
		///<summary>
		/// The AndroidForWorkEnterpriseWiFiConfiguration constructor
		///</summary>
        public AndroidForWorkEnterpriseWiFiConfiguration()
        {
            this.ODataType = "microsoft.graph.androidForWorkEnterpriseWiFiConfiguration";
        }
	
        /// <summary>
        /// Gets or sets authentication method.
        /// Indicates the Authentication Method the client (device) needs to use when the EAP Type is configured to PEAP or EAP-TTLS. Possible values are: certificate, usernameAndPassword, derivedCredential.
        /// </summary>
        [JsonPropertyName("authenticationMethod")]
        public WiFiAuthenticationMethod? AuthenticationMethod { get; set; }
    
        /// <summary>
        /// Gets or sets eap type.
        /// Indicates the type of EAP protocol set on the Wi-Fi endpoint (router). Possible values are: eapTls, eapTtls, peap.
        /// </summary>
        [JsonPropertyName("eapType")]
        public AndroidEapType? EapType { get; set; }
    
        /// <summary>
        /// Gets or sets inner authentication protocol for eap ttls.
        /// Non-EAP Method for Authentication (Inner Identity) when EAP Type is EAP-TTLS and Authenticationmethod is Username and Password. Possible values are: unencryptedPassword, challengeHandshakeAuthenticationProtocol, microsoftChap, microsoftChapVersionTwo.
        /// </summary>
        [JsonPropertyName("innerAuthenticationProtocolForEapTtls")]
        public NonEapAuthenticationMethodForEapTtlsType? InnerAuthenticationProtocolForEapTtls { get; set; }
    
        /// <summary>
        /// Gets or sets inner authentication protocol for peap.
        /// Non-EAP Method for Authentication (Inner Identity) when EAP Type is PEAP and Authenticationmethod is Username and Password. Possible values are: none, microsoftChapVersionTwo.
        /// </summary>
        [JsonPropertyName("innerAuthenticationProtocolForPeap")]
        public NonEapAuthenticationMethodForPeap? InnerAuthenticationProtocolForPeap { get; set; }
    
        /// <summary>
        /// Gets or sets outer identity privacy temporary value.
        /// Enable identity privacy (Outer Identity) when EAP Type is configured to EAP-TTLS or PEAP. The String provided here is used to mask the username of individual users when they attempt to connect to Wi-Fi network.
        /// </summary>
        [JsonPropertyName("outerIdentityPrivacyTemporaryValue")]
        public string OuterIdentityPrivacyTemporaryValue { get; set; }
    
        /// <summary>
        /// Gets or sets identity certificate for client authentication.
        /// Identity Certificate for client authentication when EAP Type is configured to EAP-TLS, EAP-TTLS (with Certificate Authentication), or PEAP (with Certificate Authentication). This is the certificate presented by client to the Wi-Fi endpoint. The authentication server sitting behind the Wi-Fi endpoint must accept this certificate to successfully establish a Wi-Fi connection.
        /// </summary>
        [JsonPropertyName("identityCertificateForClientAuthentication")]
        public AndroidForWorkCertificateProfileBase IdentityCertificateForClientAuthentication { get; set; }
    
        /// <summary>
        /// Gets or sets root certificate for server validation.
        /// Trusted Root Certificate for Server Validation when EAP Type is configured to EAP-TLS, EAP-TTLS or PEAP. This is the certificate presented by the Wi-Fi endpoint when the device attempts to connect to Wi-Fi endpoint. The device (or user) must accept this certificate to continue the connection attempt.
        /// </summary>
        [JsonPropertyName("rootCertificateForServerValidation")]
        public AndroidForWorkTrustedRootCertificate RootCertificateForServerValidation { get; set; }
    
    }
}

