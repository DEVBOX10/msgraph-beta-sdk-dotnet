// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type DeviceComplianceScriptRule.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<DeviceComplianceScriptRule>))]
    public partial class DeviceComplianceScriptRule
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DeviceComplianceScriptRule"/> class.
        /// </summary>
        public DeviceComplianceScriptRule()
        {
            this.ODataType = "microsoft.graph.deviceComplianceScriptRule";
        }

        /// <summary>
        /// Gets or sets dataType.
        /// Data type specified in the rule. Possible values are: none, boolean, int64, double, string, dateTime, version, base64, xml, booleanArray, int64Array, doubleArray, stringArray, dateTimeArray, versionArray.
        /// </summary>
        [JsonPropertyName("dataType")]
        public DataType? DataType { get; set; }
    
        /// <summary>
        /// Gets or sets deviceComplianceScriptRuleDataType.
        /// Data type specified in the rule. Possible values are: none, boolean, int64, double, string, dateTime, version, base64, xml, booleanArray, int64Array, doubleArray, stringArray, dateTimeArray, versionArray.
        /// </summary>
        [JsonPropertyName("deviceComplianceScriptRuleDataType")]
        public DeviceComplianceScriptRuleDataType? DeviceComplianceScriptRuleDataType { get; set; }
    
        /// <summary>
        /// Gets or sets deviceComplianceScriptRulOperator.
        /// Operator specified in the rule. Possible values are: none, and, or, isEquals, notEquals, greaterThan, lessThan, between, notBetween, greaterEquals, lessEquals, dayTimeBetween, beginsWith, notBeginsWith, endsWith, notEndsWith, contains, notContains, allOf, oneOf, noneOf, setEquals, orderedSetEquals, subsetOf, excludesAll.
        /// </summary>
        [JsonPropertyName("deviceComplianceScriptRulOperator")]
        public DeviceComplianceScriptRulOperator? DeviceComplianceScriptRulOperator { get; set; }
    
        /// <summary>
        /// Gets or sets operand.
        /// Operand specified in the rule.
        /// </summary>
        [JsonPropertyName("operand")]
        public string Operand { get; set; }
    
        /// <summary>
        /// Gets or sets operator.
        /// Operator specified in the rule. Possible values are: none, and, or, isEquals, notEquals, greaterThan, lessThan, between, notBetween, greaterEquals, lessEquals, dayTimeBetween, beginsWith, notBeginsWith, endsWith, notEndsWith, contains, notContains, allOf, oneOf, noneOf, setEquals, orderedSetEquals, subsetOf, excludesAll.
        /// </summary>
        [JsonPropertyName("operator")]
        public Operator? Operator { get; set; }
    
        /// <summary>
        /// Gets or sets settingName.
        /// Setting name specified in the rule.
        /// </summary>
        [JsonPropertyName("settingName")]
        public string SettingName { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
