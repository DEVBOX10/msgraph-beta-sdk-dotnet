// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Unified Role Schedule Base.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<UnifiedRoleScheduleBase>))]
    public partial class UnifiedRoleScheduleBase : Entity
    {
    
        /// <summary>
        /// Gets or sets app scope id.
        /// Identifier of the app-specific scope when the assignment scope is app-specific. The scope of an assignment determines the set of resources for which the principal has been granted access. App scopes are scopes that are defined and understood by this application only. Use / for tenant-wide app scopes. Use directoryScopeId to limit the scope to particular directory objects, for example, administrative units or all users.
        /// </summary>
        [JsonPropertyName("appScopeId")]
        public string AppScopeId { get; set; }
    
        /// <summary>
        /// Gets or sets created date time.
        /// Time that the schedule was created.
        /// </summary>
        [JsonPropertyName("createdDateTime")]
        public DateTimeOffset? CreatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets created using.
        /// Identifier of the roleAssignmentScheduleRequest that created this schedule.
        /// </summary>
        [JsonPropertyName("createdUsing")]
        public string CreatedUsing { get; set; }
    
        /// <summary>
        /// Gets or sets directory scope id.
        /// Identifier of the directory object representing the scope of the assignment. The scope of an assignment determines the set of resources for which the principal has been granted access. Directory scopes are shared scopes stored in the directory that are understood by multiple applications. Use / for tenant-wide scope. Use appScopeId to limit the scope to an application only.
        /// </summary>
        [JsonPropertyName("directoryScopeId")]
        public string DirectoryScopeId { get; set; }
    
        /// <summary>
        /// Gets or sets modified date time.
        /// Last time the schedule was updated.
        /// </summary>
        [JsonPropertyName("modifiedDateTime")]
        public DateTimeOffset? ModifiedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets principal id.
        /// Identifier of the principal to which the assignment is being granted to. Supports $filter (eq).
        /// </summary>
        [JsonPropertyName("principalId")]
        public string PrincipalId { get; set; }
    
        /// <summary>
        /// Gets or sets role definition id.
        /// Identifier of the unifiedRoleDefinition the assignment is for. Read only. Supports $filter (eq).
        /// </summary>
        [JsonPropertyName("roleDefinitionId")]
        public string RoleDefinitionId { get; set; }
    
        /// <summary>
        /// Gets or sets status.
        /// Status for the roleAssignmentSchedule. It can include state related messages like Provisioned, Revoked, Pending Provisioning, and Pending Approval. Supports $filter (eq).
        /// </summary>
        [JsonPropertyName("status")]
        public string Status { get; set; }
    
        /// <summary>
        /// Gets or sets app scope.
        /// Read-only property with details of the app specific scope when the assignment scope is app specific. Containment entity.
        /// </summary>
        [JsonPropertyName("appScope")]
        public AppScope AppScope { get; set; }
    
        /// <summary>
        /// Gets or sets directory scope.
        /// Property referencing the directory object that is the scope of the assignment. Provided so that callers can get the directory object using $expand at the same time as getting the role assignment. Read-only.
        /// </summary>
        [JsonPropertyName("directoryScope")]
        public DirectoryObject DirectoryScope { get; set; }
    
        /// <summary>
        /// Gets or sets principal.
        /// Property referencing the principal that is getting a role assignment through the request. Provided so that callers can get the principal using $expand at the same time as getting the role assignment. Read-only.
        /// </summary>
        [JsonPropertyName("principal")]
        public DirectoryObject Principal { get; set; }
    
        /// <summary>
        /// Gets or sets role definition.
        /// Property indicating the roleDefinition the assignment is for. Provided so that callers can get the role definition using $expand at the same time as getting the role assignment. roleDefinition.Id will be auto expanded.
        /// </summary>
        [JsonPropertyName("roleDefinition")]
        public UnifiedRoleDefinition RoleDefinition { get; set; }
    
    }
}

