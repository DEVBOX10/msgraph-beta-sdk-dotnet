// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type WindowsMalwareOverview.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<WindowsMalwareOverview>))]
    public partial class WindowsMalwareOverview
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WindowsMalwareOverview"/> class.
        /// </summary>
        public WindowsMalwareOverview()
        {
            this.ODataType = "microsoft.graph.windowsMalwareOverview";
        }

        /// <summary>
        /// Gets or sets malwareCategorySummary.
        /// Count of devices per malware category
        /// </summary>
        [JsonPropertyName("malwareCategorySummary")]
        public IEnumerable<WindowsMalwareCategoryCount> MalwareCategorySummary { get; set; }
    
        /// <summary>
        /// Gets or sets malwareDetectedDeviceCount.
        /// Count of devices with malware detected in the last 30 days
        /// </summary>
        [JsonPropertyName("malwareDetectedDeviceCount")]
        public Int32? MalwareDetectedDeviceCount { get; set; }
    
        /// <summary>
        /// Gets or sets malwareExecutionStateSummary.
        /// Count of devices per malware execution state
        /// </summary>
        [JsonPropertyName("malwareExecutionStateSummary")]
        public IEnumerable<WindowsMalwareExecutionStateCount> MalwareExecutionStateSummary { get; set; }
    
        /// <summary>
        /// Gets or sets malwareNameSummary.
        /// Count of devices per malware
        /// </summary>
        [JsonPropertyName("malwareNameSummary")]
        public IEnumerable<WindowsMalwareNameCount> MalwareNameSummary { get; set; }
    
        /// <summary>
        /// Gets or sets malwareSeveritySummary.
        /// Count of active malware per malware severity
        /// </summary>
        [JsonPropertyName("malwareSeveritySummary")]
        public IEnumerable<WindowsMalwareSeverityCount> MalwareSeveritySummary { get; set; }
    
        /// <summary>
        /// Gets or sets malwareStateSummary.
        /// Count of devices per malware state
        /// </summary>
        [JsonPropertyName("malwareStateSummary")]
        public IEnumerable<WindowsMalwareStateCount> MalwareStateSummary { get; set; }
    
        /// <summary>
        /// Gets or sets osVersionsSummary.
        /// Count of devices with malware per windows OS version
        /// </summary>
        [JsonPropertyName("osVersionsSummary")]
        public IEnumerable<OsVersionCount> OsVersionsSummary { get; set; }
    
        /// <summary>
        /// Gets or sets totalDistinctMalwareCount.
        /// Count of all distinct malwares detected across all devices. Valid values -2147483648 to 2147483647
        /// </summary>
        [JsonPropertyName("totalDistinctMalwareCount")]
        public Int32? TotalDistinctMalwareCount { get; set; }
    
        /// <summary>
        /// Gets or sets totalMalwareCount.
        /// Count of all malware detections across all devices. Valid values -2147483648 to 2147483647
        /// </summary>
        [JsonPropertyName("totalMalwareCount")]
        public Int32? TotalMalwareCount { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
