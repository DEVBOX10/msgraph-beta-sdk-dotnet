// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type User Experience Analytics Anomaly.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<UserExperienceAnalyticsAnomaly>))]
    public partial class UserExperienceAnalyticsAnomaly : Entity
    {
    
        /// <summary>
        /// Gets or sets anomaly first occurrence date time.
        /// Indicates the first occurrence date and time for the anomaly.
        /// </summary>
        [JsonPropertyName("anomalyFirstOccurrenceDateTime")]
        public DateTimeOffset? AnomalyFirstOccurrenceDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets anomaly id.
        /// The unique identifier of the anomaly.
        /// </summary>
        [JsonPropertyName("anomalyId")]
        public string AnomalyId { get; set; }
    
        /// <summary>
        /// Gets or sets anomaly latest occurrence date time.
        /// Indicates the latest occurrence date and time for the anomaly.
        /// </summary>
        [JsonPropertyName("anomalyLatestOccurrenceDateTime")]
        public DateTimeOffset? AnomalyLatestOccurrenceDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets anomaly name.
        /// The name of the anomaly.
        /// </summary>
        [JsonPropertyName("anomalyName")]
        public string AnomalyName { get; set; }
    
        /// <summary>
        /// Gets or sets anomaly type.
        /// The category of the anomaly. Possible values are: device, application, stopError, driver or other. Possible values are: device, application, stopError, driver, other, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("anomalyType")]
        public UserExperienceAnalyticsAnomalyType? AnomalyType { get; set; }
    
        /// <summary>
        /// Gets or sets asset name.
        /// The name of the application or module that caused the anomaly.
        /// </summary>
        [JsonPropertyName("assetName")]
        public string AssetName { get; set; }
    
        /// <summary>
        /// Gets or sets asset publisher.
        /// The publisher of the application or module that caused the anomaly.
        /// </summary>
        [JsonPropertyName("assetPublisher")]
        public string AssetPublisher { get; set; }
    
        /// <summary>
        /// Gets or sets asset version.
        /// The version of the application or module that caused the anomaly.
        /// </summary>
        [JsonPropertyName("assetVersion")]
        public string AssetVersion { get; set; }
    
        /// <summary>
        /// Gets or sets detection model id.
        /// The unique identifier of the anomaly detection model.
        /// </summary>
        [JsonPropertyName("detectionModelId")]
        public string DetectionModelId { get; set; }
    
        /// <summary>
        /// Gets or sets device impacted count.
        /// The number of devices impacted by the anomaly. Valid values -2147483648 to 2147483647
        /// </summary>
        [JsonPropertyName("deviceImpactedCount")]
        public Int32? DeviceImpactedCount { get; set; }
    
        /// <summary>
        /// Gets or sets issue id.
        /// The unique identifier of the anomaly detection model.
        /// </summary>
        [JsonPropertyName("issueId")]
        public string IssueId { get; set; }
    
        /// <summary>
        /// Gets or sets severity.
        /// The severity of the anomaly. Possible values are: high, medium, low, informational or other. Possible values are: high, medium, low, informational, other, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("severity")]
        public UserExperienceAnalyticsAnomalySeverity? Severity { get; set; }
    
        /// <summary>
        /// Gets or sets state.
        /// The state of the anomaly. Possible values are: new, active, disabled, removed or other. Possible values are: new, active, disabled, removed, other, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("state")]
        public UserExperienceAnalyticsAnomalyState? State { get; set; }
    
    }
}

