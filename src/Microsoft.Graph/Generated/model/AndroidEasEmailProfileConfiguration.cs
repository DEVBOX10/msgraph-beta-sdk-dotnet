// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Android Eas Email Profile Configuration.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<AndroidEasEmailProfileConfiguration>))]
    public partial class AndroidEasEmailProfileConfiguration : DeviceConfiguration
    {
    
		///<summary>
		/// The AndroidEasEmailProfileConfiguration constructor
		///</summary>
        public AndroidEasEmailProfileConfiguration()
        {
            this.ODataType = "microsoft.graph.androidEasEmailProfileConfiguration";
        }
	
        /// <summary>
        /// Gets or sets account name.
        /// Exchange ActiveSync account name, displayed to users as name of EAS (this) profile.
        /// </summary>
        [JsonPropertyName("accountName")]
        public string AccountName { get; set; }
    
        /// <summary>
        /// Gets or sets authentication method.
        /// Authentication method for Exchange ActiveSync. Possible values are: usernameAndPassword, certificate, derivedCredential.
        /// </summary>
        [JsonPropertyName("authenticationMethod")]
        public EasAuthenticationMethod? AuthenticationMethod { get; set; }
    
        /// <summary>
        /// Gets or sets custom domain name.
        /// Custom domain name value used while generating an email profile before installing on the device.
        /// </summary>
        [JsonPropertyName("customDomainName")]
        public string CustomDomainName { get; set; }
    
        /// <summary>
        /// Gets or sets duration of email to sync.
        /// Duration of time email should be synced to. Possible values are: userDefined, oneDay, threeDays, oneWeek, twoWeeks, oneMonth, unlimited.
        /// </summary>
        [JsonPropertyName("durationOfEmailToSync")]
        public EmailSyncDuration? DurationOfEmailToSync { get; set; }
    
        /// <summary>
        /// Gets or sets email address source.
        /// Email attribute that is picked from AAD and injected into this profile before installing on the device. Possible values are: userPrincipalName, primarySmtpAddress.
        /// </summary>
        [JsonPropertyName("emailAddressSource")]
        public UserEmailSource? EmailAddressSource { get; set; }
    
        /// <summary>
        /// Gets or sets email sync schedule.
        /// Email sync schedule. Possible values are: userDefined, asMessagesArrive, manual, fifteenMinutes, thirtyMinutes, sixtyMinutes, basedOnMyUsage.
        /// </summary>
        [JsonPropertyName("emailSyncSchedule")]
        public EmailSyncSchedule? EmailSyncSchedule { get; set; }
    
        /// <summary>
        /// Gets or sets host name.
        /// Exchange location (URL) that the native mail app connects to.
        /// </summary>
        [JsonPropertyName("hostName")]
        public string HostName { get; set; }
    
        /// <summary>
        /// Gets or sets require smime.
        /// Indicates whether or not to use S/MIME certificate.
        /// </summary>
        [JsonPropertyName("requireSmime")]
        public bool? RequireSmime { get; set; }
    
        /// <summary>
        /// Gets or sets require ssl.
        /// Indicates whether or not to use SSL.
        /// </summary>
        [JsonPropertyName("requireSsl")]
        public bool? RequireSsl { get; set; }
    
        /// <summary>
        /// Gets or sets sync calendar.
        /// Toggles syncing the calendar. If set to false calendar is turned off on the device.
        /// </summary>
        [JsonPropertyName("syncCalendar")]
        public bool? SyncCalendar { get; set; }
    
        /// <summary>
        /// Gets or sets sync contacts.
        /// Toggles syncing contacts. If set to false contacts are turned off on the device.
        /// </summary>
        [JsonPropertyName("syncContacts")]
        public bool? SyncContacts { get; set; }
    
        /// <summary>
        /// Gets or sets sync notes.
        /// Toggles syncing notes. If set to false notes are turned off on the device.
        /// </summary>
        [JsonPropertyName("syncNotes")]
        public bool? SyncNotes { get; set; }
    
        /// <summary>
        /// Gets or sets sync tasks.
        /// Toggles syncing tasks. If set to false tasks are turned off on the device.
        /// </summary>
        [JsonPropertyName("syncTasks")]
        public bool? SyncTasks { get; set; }
    
        /// <summary>
        /// Gets or sets user domain name source.
        /// UserDomainname attribute that is picked from AAD and injected into this profile before installing on the device. Possible values are: fullDomainName, netBiosDomainName.
        /// </summary>
        [JsonPropertyName("userDomainNameSource")]
        public DomainNameSource? UserDomainNameSource { get; set; }
    
        /// <summary>
        /// Gets or sets username source.
        /// Username attribute that is picked from AAD and injected into this profile before installing on the device. Possible values are: username, userPrincipalName, samAccountName, primarySmtpAddress.
        /// </summary>
        [JsonPropertyName("usernameSource")]
        public AndroidUsernameSource? UsernameSource { get; set; }
    
        /// <summary>
        /// Gets or sets identity certificate.
        /// Identity certificate.
        /// </summary>
        [JsonPropertyName("identityCertificate")]
        public AndroidCertificateProfileBase IdentityCertificate { get; set; }
    
        /// <summary>
        /// Gets or sets smime signing certificate.
        /// S/MIME signing certificate.
        /// </summary>
        [JsonPropertyName("smimeSigningCertificate")]
        public AndroidCertificateProfileBase SmimeSigningCertificate { get; set; }
    
    }
}

