// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type DeviceProtectionOverview.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<DeviceProtectionOverview>))]
    public partial class DeviceProtectionOverview
    {

        /// <summary>
        /// Gets or sets cleanDeviceCount.
        /// Clean device count.
        /// </summary>
        [JsonPropertyName("cleanDeviceCount")]
        public Int32? CleanDeviceCount { get; set; }
    
        /// <summary>
        /// Gets or sets criticalFailuresDeviceCount.
        /// Critical failures device count.
        /// </summary>
        [JsonPropertyName("criticalFailuresDeviceCount")]
        public Int32? CriticalFailuresDeviceCount { get; set; }
    
        /// <summary>
        /// Gets or sets inactiveThreatAgentDeviceCount.
        /// Device with inactive threat agent count
        /// </summary>
        [JsonPropertyName("inactiveThreatAgentDeviceCount")]
        public Int32? InactiveThreatAgentDeviceCount { get; set; }
    
        /// <summary>
        /// Gets or sets pendingFullScanDeviceCount.
        /// Pending full scan device count.
        /// </summary>
        [JsonPropertyName("pendingFullScanDeviceCount")]
        public Int32? PendingFullScanDeviceCount { get; set; }
    
        /// <summary>
        /// Gets or sets pendingManualStepsDeviceCount.
        /// Pending manual steps device count.
        /// </summary>
        [JsonPropertyName("pendingManualStepsDeviceCount")]
        public Int32? PendingManualStepsDeviceCount { get; set; }
    
        /// <summary>
        /// Gets or sets pendingOfflineScanDeviceCount.
        /// Pending offline scan device count.
        /// </summary>
        [JsonPropertyName("pendingOfflineScanDeviceCount")]
        public Int32? PendingOfflineScanDeviceCount { get; set; }
    
        /// <summary>
        /// Gets or sets pendingQuickScanDeviceCount.
        /// Pending quick scan device count. Valid values -2147483648 to 2147483647
        /// </summary>
        [JsonPropertyName("pendingQuickScanDeviceCount")]
        public Int32? PendingQuickScanDeviceCount { get; set; }
    
        /// <summary>
        /// Gets or sets pendingRestartDeviceCount.
        /// Pending restart device count.
        /// </summary>
        [JsonPropertyName("pendingRestartDeviceCount")]
        public Int32? PendingRestartDeviceCount { get; set; }
    
        /// <summary>
        /// Gets or sets pendingSignatureUpdateDeviceCount.
        /// Device with old signature count.
        /// </summary>
        [JsonPropertyName("pendingSignatureUpdateDeviceCount")]
        public Int32? PendingSignatureUpdateDeviceCount { get; set; }
    
        /// <summary>
        /// Gets or sets totalReportedDeviceCount.
        /// Total device count.
        /// </summary>
        [JsonPropertyName("totalReportedDeviceCount")]
        public Int32? TotalReportedDeviceCount { get; set; }
    
        /// <summary>
        /// Gets or sets unknownStateThreatAgentDeviceCount.
        /// Device with threat agent state as unknown count.
        /// </summary>
        [JsonPropertyName("unknownStateThreatAgentDeviceCount")]
        public Int32? UnknownStateThreatAgentDeviceCount { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
