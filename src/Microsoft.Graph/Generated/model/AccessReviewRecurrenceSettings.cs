// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type AccessReviewRecurrenceSettings.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<AccessReviewRecurrenceSettings>))]
    public partial class AccessReviewRecurrenceSettings
    {

        /// <summary>
        /// Gets or sets durationInDays.
        /// The duration in days for recurrence.
        /// </summary>
        [JsonPropertyName("durationInDays")]
        public Int32? DurationInDays { get; set; }
    
        /// <summary>
        /// Gets or sets recurrenceCount.
        /// The count of recurrences, if the value of recurrenceEndType is occurrences, or 0 otherwise.
        /// </summary>
        [JsonPropertyName("recurrenceCount")]
        public Int32? RecurrenceCount { get; set; }
    
        /// <summary>
        /// Gets or sets recurrenceEndType.
        /// How the recurrence ends. Possible values: never, endBy, occurrences, or recurrenceCount. If it is never, then there is no explicit end of the recurrence series. If it is endBy, then the recurrence ends at a certain date. If it is occurrences, then the series ends after recurrenceCount instances of the review have completed.
        /// </summary>
        [JsonPropertyName("recurrenceEndType")]
        public string RecurrenceEndType { get; set; }
    
        /// <summary>
        /// Gets or sets recurrenceType.
        /// The recurrence interval. Possible vaules: onetime, weekly, monthly, quarterly, halfyearly or annual.
        /// </summary>
        [JsonPropertyName("recurrenceType")]
        public string RecurrenceType { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
