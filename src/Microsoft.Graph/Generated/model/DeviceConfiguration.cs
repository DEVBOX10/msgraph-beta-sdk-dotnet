// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Device Configuration.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<DeviceConfiguration>))]
    public partial class DeviceConfiguration : Entity
    {
    
		///<summary>
		/// The internal DeviceConfiguration constructor
		///</summary>
        protected internal DeviceConfiguration()
        {
            // Don't allow initialization of abstract entity types
        }
    
        /// <summary>
        /// Gets or sets created date time.
        /// DateTime the object was created.
        /// </summary>
        [JsonPropertyName("createdDateTime")]
        public DateTimeOffset? CreatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets description.
        /// Admin provided description of the Device Configuration.
        /// </summary>
        [JsonPropertyName("description")]
        public string Description { get; set; }
    
        /// <summary>
        /// Gets or sets device management applicability rule device mode.
        /// The device mode applicability rule for this Policy.
        /// </summary>
        [JsonPropertyName("deviceManagementApplicabilityRuleDeviceMode")]
        public DeviceManagementApplicabilityRuleDeviceMode DeviceManagementApplicabilityRuleDeviceMode { get; set; }
    
        /// <summary>
        /// Gets or sets device management applicability rule os edition.
        /// The OS edition applicability for this Policy.
        /// </summary>
        [JsonPropertyName("deviceManagementApplicabilityRuleOsEdition")]
        public DeviceManagementApplicabilityRuleOsEdition DeviceManagementApplicabilityRuleOsEdition { get; set; }
    
        /// <summary>
        /// Gets or sets device management applicability rule os version.
        /// The OS version applicability rule for this Policy.
        /// </summary>
        [JsonPropertyName("deviceManagementApplicabilityRuleOsVersion")]
        public DeviceManagementApplicabilityRuleOsVersion DeviceManagementApplicabilityRuleOsVersion { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// Admin provided name of the device configuration.
        /// </summary>
        [JsonPropertyName("displayName")]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets last modified date time.
        /// DateTime the object was last modified.
        /// </summary>
        [JsonPropertyName("lastModifiedDateTime")]
        public DateTimeOffset? LastModifiedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets role scope tag ids.
        /// List of Scope Tags for this Entity instance.
        /// </summary>
        [JsonPropertyName("roleScopeTagIds")]
        public IEnumerable<string> RoleScopeTagIds { get; set; }
    
        /// <summary>
        /// Gets or sets supports scope tags.
        /// Indicates whether or not the underlying Device Configuration supports the assignment of scope tags. Assigning to the ScopeTags property is not allowed when this value is false and entities will not be visible to scoped users. This occurs for Legacy policies created in Silverlight and can be resolved by deleting and recreating the policy in the Azure Portal. This property is read-only.
        /// </summary>
        [JsonPropertyName("supportsScopeTags")]
        public bool? SupportsScopeTags { get; set; }
    
        /// <summary>
        /// Gets or sets version.
        /// Version of the device configuration.
        /// </summary>
        [JsonPropertyName("version")]
        public Int32? Version { get; set; }
    
        /// <summary>
        /// Gets or sets assignments.
        /// The list of assignments for the device configuration profile.
        /// </summary>
        [JsonPropertyName("assignments")]
        public IDeviceConfigurationAssignmentsCollectionPage Assignments { get; set; }
    
        /// <summary>
        /// Gets or sets device setting state summaries.
        /// Device Configuration Setting State Device Summary
        /// </summary>
        [JsonPropertyName("deviceSettingStateSummaries")]
        public IDeviceConfigurationDeviceSettingStateSummariesCollectionPage DeviceSettingStateSummaries { get; set; }
    
        /// <summary>
        /// Gets or sets device statuses.
        /// Device configuration installation status by device.
        /// </summary>
        [JsonPropertyName("deviceStatuses")]
        public IDeviceConfigurationDeviceStatusesCollectionPage DeviceStatuses { get; set; }
    
        /// <summary>
        /// Gets or sets device status overview.
        /// Device Configuration devices status overview
        /// </summary>
        [JsonPropertyName("deviceStatusOverview")]
        public DeviceConfigurationDeviceOverview DeviceStatusOverview { get; set; }
    
        /// <summary>
        /// Gets or sets group assignments.
        /// The list of group assignments for the device configuration profile.
        /// </summary>
        [JsonPropertyName("groupAssignments")]
        public IDeviceConfigurationGroupAssignmentsCollectionPage GroupAssignments { get; set; }
    
        /// <summary>
        /// Gets or sets user statuses.
        /// Device configuration installation status by user.
        /// </summary>
        [JsonPropertyName("userStatuses")]
        public IDeviceConfigurationUserStatusesCollectionPage UserStatuses { get; set; }
    
        /// <summary>
        /// Gets or sets user status overview.
        /// Device Configuration users status overview
        /// </summary>
        [JsonPropertyName("userStatusOverview")]
        public DeviceConfigurationUserOverview UserStatusOverview { get; set; }
    
    }
}

