// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type TeamworkNetworkConfiguration.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<TeamworkNetworkConfiguration>))]
    public partial class TeamworkNetworkConfiguration
    {

        /// <summary>
        /// Gets or sets defaultGateway.
        /// The default gateway is the path used to pass information when the destination is unknown to the device.
        /// </summary>
        [JsonPropertyName("defaultGateway")]
        public string DefaultGateway { get; set; }
    
        /// <summary>
        /// Gets or sets domainName.
        /// The network domain of the device, for example, contoso.com.
        /// </summary>
        [JsonPropertyName("domainName")]
        public string DomainName { get; set; }
    
        /// <summary>
        /// Gets or sets hostName.
        /// The device name on a network.
        /// </summary>
        [JsonPropertyName("hostName")]
        public string HostName { get; set; }
    
        /// <summary>
        /// Gets or sets ipAddress.
        /// The IP address is a numerical label that uniquely identifies every device connected to the internet.
        /// </summary>
        [JsonPropertyName("ipAddress")]
        public string IpAddress { get; set; }
    
        /// <summary>
        /// Gets or sets isDhcpEnabled.
        /// True if DHCP is enabled.
        /// </summary>
        [JsonPropertyName("isDhcpEnabled")]
        public bool? IsDhcpEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets isPCPortEnabled.
        /// True if the PC port is enabled.
        /// </summary>
        [JsonPropertyName("isPCPortEnabled")]
        public bool? IsPCPortEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets primaryDns.
        /// A primary DNS is the first point of contact for a device that translates the hostname into an IP address.
        /// </summary>
        [JsonPropertyName("primaryDns")]
        public string PrimaryDns { get; set; }
    
        /// <summary>
        /// Gets or sets secondaryDns.
        /// A secondary DNS is used when the primary DNS is not available.
        /// </summary>
        [JsonPropertyName("secondaryDns")]
        public string SecondaryDns { get; set; }
    
        /// <summary>
        /// Gets or sets subnetMask.
        /// A subnet mask is a number that distinguishes the network address and the host address within an IP address.
        /// </summary>
        [JsonPropertyName("subnetMask")]
        public string SubnetMask { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
