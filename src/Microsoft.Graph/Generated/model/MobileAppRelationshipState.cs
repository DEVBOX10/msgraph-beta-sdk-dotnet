// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type MobileAppRelationshipState.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<MobileAppRelationshipState>))]
    public partial class MobileAppRelationshipState
    {

        /// <summary>
        /// Gets or sets deviceId.
        /// The corresponding device id.
        /// </summary>
        [JsonPropertyName("deviceId")]
        public string DeviceId { get; set; }
    
        /// <summary>
        /// Gets or sets errorCode.
        /// The error code for install or uninstall failures of target app.
        /// </summary>
        [JsonPropertyName("errorCode")]
        public Int32? ErrorCode { get; set; }
    
        /// <summary>
        /// Gets or sets installState.
        /// The install state of the app of target app. Possible values are: installed, failed, notInstalled, uninstallFailed, pendingInstall, unknown, notApplicable.
        /// </summary>
        [JsonPropertyName("installState")]
        public ResultantAppState? InstallState { get; set; }
    
        /// <summary>
        /// Gets or sets installStateDetail.
        /// The install state detail of the app. Possible values are: noAdditionalDetails, dependencyFailedToInstall, dependencyWithRequirementsNotMet, dependencyPendingReboot, dependencyWithAutoInstallDisabled, iosAppStoreUpdateFailedToInstall, vppAppHasUpdateAvailable, userRejectedUpdate, seeInstallErrorCode, autoInstallDisabled, managedAppNoLongerPresent, userRejectedInstall, userIsNotLoggedIntoAppStore, seeUninstallErrorCode, pendingReboot, installingDependencies, contentDownloaded, powerShellScriptRequirementNotMet, registryRequirementNotMet, fileSystemRequirementNotMet, platformNotApplicable, minimumCpuSpeedNotMet, minimumLogicalProcessorCountNotMet, minimumPhysicalMemoryNotMet, minimumOsVersionNotMet, minimumDiskSpaceNotMet, processorArchitectureNotApplicable.
        /// </summary>
        [JsonPropertyName("installStateDetail")]
        public ResultantAppStateDetail? InstallStateDetail { get; set; }
    
        /// <summary>
        /// Gets or sets sourceIds.
        /// The collection of source mobile app's ids.
        /// </summary>
        [JsonPropertyName("sourceIds")]
        public IEnumerable<string> SourceIds { get; set; }
    
        /// <summary>
        /// Gets or sets targetDisplayName.
        /// The related target app's display name.
        /// </summary>
        [JsonPropertyName("targetDisplayName")]
        public string TargetDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets targetId.
        /// The related target app's id.
        /// </summary>
        [JsonPropertyName("targetId")]
        public string TargetId { get; set; }
    
        /// <summary>
        /// Gets or sets targetLastSyncDateTime.
        /// The last sync time of the target app.
        /// </summary>
        [JsonPropertyName("targetLastSyncDateTime")]
        public DateTimeOffset? TargetLastSyncDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
