// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type VpnDnsRule.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<VpnDnsRule>))]
    public partial class VpnDnsRule
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VpnDnsRule"/> class.
        /// </summary>
        public VpnDnsRule()
        {
            this.ODataType = "microsoft.graph.vpnDnsRule";
        }

        /// <summary>
        /// Gets or sets autoTrigger.
        /// Automatically connect to the VPN when the device connects to this domain: Default False.
        /// </summary>
        [JsonPropertyName("autoTrigger")]
        public bool? AutoTrigger { get; set; }
    
        /// <summary>
        /// Gets or sets name.
        /// Name.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }
    
        /// <summary>
        /// Gets or sets persistent.
        /// Keep this rule active even when the VPN is not connected: Default False
        /// </summary>
        [JsonPropertyName("persistent")]
        public bool? Persistent { get; set; }
    
        /// <summary>
        /// Gets or sets proxyServerUri.
        /// Proxy Server Uri.
        /// </summary>
        [JsonPropertyName("proxyServerUri")]
        public string ProxyServerUri { get; set; }
    
        /// <summary>
        /// Gets or sets servers.
        /// Servers.
        /// </summary>
        [JsonPropertyName("servers")]
        public IEnumerable<string> Servers { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
