// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Service Principal Risk Detection.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<ServicePrincipalRiskDetection>))]
    public partial class ServicePrincipalRiskDetection : Entity
    {
    
        /// <summary>
        /// Gets or sets activity.
        /// Indicates the activity type the detected risk is linked to.  The possible values are: signin, servicePrincipal. Note that you must use the Prefer: include-unknown-enum-members request header to get the following value(s) in this evolvable enum: servicePrincipal.
        /// </summary>
        [JsonPropertyName("activity")]
        public ActivityType? Activity { get; set; }
    
        /// <summary>
        /// Gets or sets activity date time.
        /// Date and time when the risky activity occurred. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        [JsonPropertyName("activityDateTime")]
        public DateTimeOffset? ActivityDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets additional info.
        /// Additional information associated with the risk detection. This string value is represented as a JSON object with the quotations escaped.
        /// </summary>
        [JsonPropertyName("additionalInfo")]
        public string AdditionalInfo { get; set; }
    
        /// <summary>
        /// Gets or sets app id.
        /// The unique identifier for the associated application.
        /// </summary>
        [JsonPropertyName("appId")]
        public string AppId { get; set; }
    
        /// <summary>
        /// Gets or sets correlation id.
        /// Correlation ID of the sign-in activity associated with the risk detection. This property is null if the risk detection is not associated with a sign-in activity.
        /// </summary>
        [JsonPropertyName("correlationId")]
        public string CorrelationId { get; set; }
    
        /// <summary>
        /// Gets or sets detected date time.
        /// Date and time when the risk was detected. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("detectedDateTime")]
        public DateTimeOffset? DetectedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets detection timing type.
        /// Timing of the detected risk , whether real-time or offline). The possible values are: notDefined, realtime, nearRealtime, offline, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("detectionTimingType")]
        public RiskDetectionTimingType? DetectionTimingType { get; set; }
    
        /// <summary>
        /// Gets or sets ip address.
        /// Provides the IP address of the client from where the risk occurred.
        /// </summary>
        [JsonPropertyName("ipAddress")]
        public string IpAddress { get; set; }
    
        /// <summary>
        /// Gets or sets key ids.
        /// The unique identifier (GUID) for the key credential associated with the risk detection.
        /// </summary>
        [JsonPropertyName("keyIds")]
        public IEnumerable<string> KeyIds { get; set; }
    
        /// <summary>
        /// Gets or sets last updated date time.
        /// Date and time when the risk detection was last updated.
        /// </summary>
        [JsonPropertyName("lastUpdatedDateTime")]
        public DateTimeOffset? LastUpdatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets location.
        /// Location from where the sign-in was initiated.
        /// </summary>
        [JsonPropertyName("location")]
        public SignInLocation Location { get; set; }
    
        /// <summary>
        /// Gets or sets request id.
        /// Request identifier of the sign-in activity associated with the risk detection. This property is null if the risk detection is not associated with a sign-in activity. Supports $filter (eq).
        /// </summary>
        [JsonPropertyName("requestId")]
        public string RequestId { get; set; }
    
        /// <summary>
        /// Gets or sets risk detail.
        /// Details of the detected risk. Note: Details for this property are only available for Workload Identities Premium customers. Events in tenants without this license will be returned hidden. The possible values are: none, hidden, adminConfirmedServicePrincipalCompromised, adminDismissedAllRiskForServicePrincipal. Note that you must use the Prefer: include-unknown-enum-members request header to get the following value(s) in this evolvable enum: adminConfirmedServicePrincipalCompromised , adminDismissedAllRiskForServicePrincipal.
        /// </summary>
        [JsonPropertyName("riskDetail")]
        public RiskDetail? RiskDetail { get; set; }
    
        /// <summary>
        /// Gets or sets risk event type.
        /// The type of risk event detected. The possible values are: investigationsThreatIntelligence, generic, adminConfirmedServicePrincipalCompromised, suspiciousSignins, leakedCredentials, anomalousServicePrincipalActivity, maliciousApplication, suspiciousApplication.
        /// </summary>
        [JsonPropertyName("riskEventType")]
        public string RiskEventType { get; set; }
    
        /// <summary>
        /// Gets or sets risk level.
        /// Level of the detected risk. Note: Details for this property are only available for Workload Identities Premium customers. Events in tenants without this license will be returned hidden. The possible values are: low, medium, high, hidden, none.
        /// </summary>
        [JsonPropertyName("riskLevel")]
        public RiskLevel? RiskLevel { get; set; }
    
        /// <summary>
        /// Gets or sets risk state.
        /// The state of a detected risky service principal or sign-in activity. The possible values are: none, dismissed, atRisk, confirmedCompromised.
        /// </summary>
        [JsonPropertyName("riskState")]
        public RiskState? RiskState { get; set; }
    
        /// <summary>
        /// Gets or sets service principal display name.
        /// The display name for the service principal.
        /// </summary>
        [JsonPropertyName("servicePrincipalDisplayName")]
        public string ServicePrincipalDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets service principal id.
        /// The unique identifier for the service principal. Supports $filter (eq).
        /// </summary>
        [JsonPropertyName("servicePrincipalId")]
        public string ServicePrincipalId { get; set; }
    
        /// <summary>
        /// Gets or sets source.
        /// Source of the risk detection. For example, identityProtection.
        /// </summary>
        [JsonPropertyName("source")]
        public string Source { get; set; }
    
        /// <summary>
        /// Gets or sets token issuer type.
        /// Indicates the type of token issuer for the detected sign-in risk. The possible values are: AzureAD.
        /// </summary>
        [JsonPropertyName("tokenIssuerType")]
        public TokenIssuerType? TokenIssuerType { get; set; }
    
    }
}

