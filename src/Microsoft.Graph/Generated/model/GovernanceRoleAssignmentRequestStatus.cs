// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type GovernanceRoleAssignmentRequestStatus.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<GovernanceRoleAssignmentRequestStatus>))]
    public partial class GovernanceRoleAssignmentRequestStatus
    {

        /// <summary>
        /// Gets or sets status.
        /// The status of the role assignment request. The value can be InProgress or Closed.
        /// </summary>
        [JsonPropertyName("status")]
        public string Status { get; set; }
    
        /// <summary>
        /// Gets or sets statusDetails.
        /// The details of the status of the role assignment request. It represents the evaluation results of different rules.
        /// </summary>
        [JsonPropertyName("statusDetails")]
        public IEnumerable<KeyValue> StatusDetails { get; set; }
    
        /// <summary>
        /// Gets or sets subStatus.
        /// The sub status of the role assignment request. The values can be Accepted, PendingEvaluation, Granted, Denied, PendingProvisioning, Provisioned, PendingRevocation, Revoked, Canceled, Failed, PendingApprovalProvisioning, PendingApproval, FailedAsResourceIsLocked, PendingAdminDecision, AdminApproved, AdminDenied, TimedOut, and ProvisioningStarted.
        /// </summary>
        [JsonPropertyName("subStatus")]
        public string SubStatus { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
