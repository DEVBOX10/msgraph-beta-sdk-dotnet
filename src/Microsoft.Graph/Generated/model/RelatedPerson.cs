// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type RelatedPerson.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<RelatedPerson>))]
    public partial class RelatedPerson
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RelatedPerson"/> class.
        /// </summary>
        public RelatedPerson()
        {
            this.ODataType = "microsoft.graph.relatedPerson";
        }

        /// <summary>
        /// Gets or sets displayName.
        /// Name of the person.
        /// </summary>
        [JsonPropertyName("displayName")]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets relationship.
        /// Possible values are: manager, colleague, directReport, dotLineReport, assistant, dotLineManager, alternateContact, friend, spouse, sibling, child, parent, sponsor, emergencyContact, other, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("relationship")]
        public PersonRelationship? Relationship { get; set; }
    
        /// <summary>
        /// Gets or sets userPrincipalName.
        /// Email address or reference to person within organization.
        /// </summary>
        [JsonPropertyName("userPrincipalName")]
        public string UserPrincipalName { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
