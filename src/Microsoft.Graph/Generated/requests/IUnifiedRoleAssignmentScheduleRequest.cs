// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: IEntityRequest.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.IO;
    using System.Net.Http;
    using System.Threading;
    using System.Linq.Expressions;

    /// <summary>
    /// The interface IUnifiedRoleAssignmentScheduleRequest.
    /// </summary>
    public partial interface IUnifiedRoleAssignmentScheduleRequest : IBaseRequest
    {
        /// <summary>
        /// Creates the specified UnifiedRoleAssignmentSchedule using POST.
        /// </summary>
        /// <param name="unifiedRoleAssignmentScheduleToCreate">The UnifiedRoleAssignmentSchedule to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The created UnifiedRoleAssignmentSchedule.</returns>
        System.Threading.Tasks.Task<UnifiedRoleAssignmentSchedule> CreateAsync(UnifiedRoleAssignmentSchedule unifiedRoleAssignmentScheduleToCreate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Creates the specified UnifiedRoleAssignmentSchedule using POST and returns a <see cref="GraphResponse{UnifiedRoleAssignmentSchedule}"/> object.
        /// </summary>
        /// <param name="unifiedRoleAssignmentScheduleToCreate">The UnifiedRoleAssignmentSchedule to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{UnifiedRoleAssignmentSchedule}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<UnifiedRoleAssignmentSchedule>> CreateResponseAsync(UnifiedRoleAssignmentSchedule unifiedRoleAssignmentScheduleToCreate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Deletes the specified UnifiedRoleAssignmentSchedule.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        System.Threading.Tasks.Task DeleteAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Deletes the specified UnifiedRoleAssignmentSchedule and returns a <see cref="GraphResponse"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task of <see cref="GraphResponse"/> to await.</returns>
        System.Threading.Tasks.Task<GraphResponse> DeleteResponseAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets the specified UnifiedRoleAssignmentSchedule.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The UnifiedRoleAssignmentSchedule.</returns>
        System.Threading.Tasks.Task<UnifiedRoleAssignmentSchedule> GetAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets the specified UnifiedRoleAssignmentSchedule and returns a <see cref="GraphResponse{UnifiedRoleAssignmentSchedule}"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{UnifiedRoleAssignmentSchedule}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<UnifiedRoleAssignmentSchedule>> GetResponseAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified UnifiedRoleAssignmentSchedule using PATCH.
        /// </summary>
        /// <param name="unifiedRoleAssignmentScheduleToUpdate">The UnifiedRoleAssignmentSchedule to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The updated UnifiedRoleAssignmentSchedule.</returns>
        System.Threading.Tasks.Task<UnifiedRoleAssignmentSchedule> UpdateAsync(UnifiedRoleAssignmentSchedule unifiedRoleAssignmentScheduleToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified UnifiedRoleAssignmentSchedule using PATCH and returns a <see cref="GraphResponse{UnifiedRoleAssignmentSchedule}"/> object.
        /// </summary>
        /// <param name="unifiedRoleAssignmentScheduleToUpdate">The UnifiedRoleAssignmentSchedule to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The <see cref="GraphResponse{UnifiedRoleAssignmentSchedule}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<UnifiedRoleAssignmentSchedule>> UpdateResponseAsync(UnifiedRoleAssignmentSchedule unifiedRoleAssignmentScheduleToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified UnifiedRoleAssignmentSchedule using PUT.
        /// </summary>
        /// <param name="unifiedRoleAssignmentScheduleToUpdate">The UnifiedRoleAssignmentSchedule object to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        System.Threading.Tasks.Task<UnifiedRoleAssignmentSchedule> PutAsync(UnifiedRoleAssignmentSchedule unifiedRoleAssignmentScheduleToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified UnifiedRoleAssignmentSchedule using PUT and returns a <see cref="GraphResponse{UnifiedRoleAssignmentSchedule}"/> object.
        /// </summary>
        /// <param name="unifiedRoleAssignmentScheduleToUpdate">The UnifiedRoleAssignmentSchedule object to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task of <see cref="GraphResponse{UnifiedRoleAssignmentSchedule}"/> to await.</returns>
        System.Threading.Tasks.Task<GraphResponse<UnifiedRoleAssignmentSchedule>> PutResponseAsync(UnifiedRoleAssignmentSchedule unifiedRoleAssignmentScheduleToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="value">The expand value.</param>
        /// <returns>The request object to send.</returns>
        IUnifiedRoleAssignmentScheduleRequest Expand(string value);

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="expandExpression">The expression from which to calculate the expand value.</param>
        /// <returns>The request object to send.</returns>
        IUnifiedRoleAssignmentScheduleRequest Expand(Expression<Func<UnifiedRoleAssignmentSchedule, object>> expandExpression);

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="value">The select value.</param>
        /// <returns>The request object to send.</returns>
        IUnifiedRoleAssignmentScheduleRequest Select(string value);

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="selectExpression">The expression from which to calculate the select value.</param>
        /// <returns>The request object to send.</returns>
        IUnifiedRoleAssignmentScheduleRequest Select(Expression<Func<UnifiedRoleAssignmentSchedule, object>> selectExpression);

    }
}
