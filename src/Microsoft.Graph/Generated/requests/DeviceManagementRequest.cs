// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequest.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Net.Http;
    using System.Threading;
    using System.Linq.Expressions;

    /// <summary>
    /// The type DeviceManagementRequest.
    /// </summary>
    public partial class DeviceManagementRequest : BaseRequest, IDeviceManagementRequest
    {
        /// <summary>
        /// Constructs a new DeviceManagementRequest.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        /// <param name="options">Query and header option name value pairs for the request.</param>
        public DeviceManagementRequest(
            string requestUrl,
            IBaseClient client,
            IEnumerable<Option> options)
            : base(requestUrl, client, options)
        {
        }

        /// <summary>
        /// Creates the specified DeviceManagement using POST.
        /// </summary>
        /// <param name="deviceManagementToCreate">The DeviceManagement to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The created DeviceManagement.</returns>
        public async System.Threading.Tasks.Task<DeviceManagement> CreateAsync(DeviceManagement deviceManagementToCreate, CancellationToken cancellationToken = default(CancellationToken))
        {
            this.ContentType = CoreConstants.MimeTypeNames.Application.Json;
            this.Method = HttpMethods.POST;
            var newEntity = await this.SendAsync<DeviceManagement>(deviceManagementToCreate, cancellationToken).ConfigureAwait(false);
            this.InitializeCollectionProperties(newEntity);
            return newEntity;
        }

        /// <summary>
        /// Creates the specified DeviceManagement using POST and returns a <see cref="GraphResponse{DeviceManagement}"/> object.
        /// </summary>
        /// <param name="deviceManagementToCreate">The DeviceManagement to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{DeviceManagement}"/> object of the request.</returns>
        public System.Threading.Tasks.Task<GraphResponse<DeviceManagement>> CreateResponseAsync(DeviceManagement deviceManagementToCreate, CancellationToken cancellationToken = default(CancellationToken))
        {
            this.ContentType = CoreConstants.MimeTypeNames.Application.Json;
            this.Method = HttpMethods.POST;
            return this.SendAsyncWithGraphResponse<DeviceManagement>(deviceManagementToCreate, cancellationToken);
        }

        /// <summary>
        /// Deletes the specified DeviceManagement.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        public async System.Threading.Tasks.Task DeleteAsync(CancellationToken cancellationToken = default(CancellationToken))
        {
            this.Method = HttpMethods.DELETE;
            await this.SendAsync<DeviceManagement>(null, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Deletes the specified DeviceManagement and returns a <see cref="GraphResponse"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task of <see cref="GraphResponse"/> to await.</returns>
        public System.Threading.Tasks.Task<GraphResponse> DeleteResponseAsync(CancellationToken cancellationToken = default(CancellationToken))
        {
            this.Method = HttpMethods.DELETE;
            return this.SendAsyncWithGraphResponse(null, cancellationToken);
        }

        /// <summary>
        /// Gets the specified DeviceManagement.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The DeviceManagement.</returns>
        public async System.Threading.Tasks.Task<DeviceManagement> GetAsync(CancellationToken cancellationToken = default(CancellationToken))
        {
            this.Method = HttpMethods.GET;
            var retrievedEntity = await this.SendAsync<DeviceManagement>(null, cancellationToken).ConfigureAwait(false);
            this.InitializeCollectionProperties(retrievedEntity);
            return retrievedEntity;
        }

        /// <summary>
        /// Gets the specified DeviceManagement and returns a <see cref="GraphResponse{DeviceManagement}"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{DeviceManagement}"/> object of the request.</returns>
        public System.Threading.Tasks.Task<GraphResponse<DeviceManagement>> GetResponseAsync(CancellationToken cancellationToken = default(CancellationToken))
        {
            this.Method = HttpMethods.GET;
            return this.SendAsyncWithGraphResponse<DeviceManagement>(null, cancellationToken);
        }

        /// <summary>
        /// Updates the specified DeviceManagement using PATCH.
        /// </summary>
        /// <param name="deviceManagementToUpdate">The DeviceManagement to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The updated DeviceManagement.</returns>
        public async System.Threading.Tasks.Task<DeviceManagement> UpdateAsync(DeviceManagement deviceManagementToUpdate, CancellationToken cancellationToken = default(CancellationToken))
        {
            this.ContentType = CoreConstants.MimeTypeNames.Application.Json;
            this.Method = HttpMethods.PATCH;
            var updatedEntity = await this.SendAsync<DeviceManagement>(deviceManagementToUpdate, cancellationToken).ConfigureAwait(false);
            this.InitializeCollectionProperties(updatedEntity);
            return updatedEntity;
        }

        /// <summary>
        /// Updates the specified DeviceManagement using PATCH and returns a <see cref="GraphResponse{DeviceManagement}"/> object.
        /// </summary>
        /// <param name="deviceManagementToUpdate">The DeviceManagement to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The <see cref="GraphResponse{DeviceManagement}"/> object of the request.</returns>
        public System.Threading.Tasks.Task<GraphResponse<DeviceManagement>> UpdateResponseAsync(DeviceManagement deviceManagementToUpdate, CancellationToken cancellationToken = default(CancellationToken))
        {
            this.ContentType = CoreConstants.MimeTypeNames.Application.Json;
            this.Method = HttpMethods.PATCH;
            return this.SendAsyncWithGraphResponse<DeviceManagement>(deviceManagementToUpdate, cancellationToken);
        }

        /// <summary>
        /// Updates the specified DeviceManagement using PUT.
        /// </summary>
        /// <param name="deviceManagementToUpdate">The DeviceManagement object to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        public async System.Threading.Tasks.Task<DeviceManagement> PutAsync(DeviceManagement deviceManagementToUpdate, CancellationToken cancellationToken = default(CancellationToken))
        {
            this.ContentType = CoreConstants.MimeTypeNames.Application.Json;
            this.Method = HttpMethods.PUT;
            var updatedEntity = await this.SendAsync<DeviceManagement>(deviceManagementToUpdate, cancellationToken).ConfigureAwait(false);
            this.InitializeCollectionProperties(updatedEntity);
            return updatedEntity;
        }

        /// <summary>
        /// Updates the specified DeviceManagement using PUT and returns a <see cref="GraphResponse{DeviceManagement}"/> object.
        /// </summary>
        /// <param name="deviceManagementToUpdate">The DeviceManagement object to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await of <see cref="GraphResponse{DeviceManagement}"/>.</returns>
        public System.Threading.Tasks.Task<GraphResponse<DeviceManagement>> PutResponseAsync(DeviceManagement deviceManagementToUpdate, CancellationToken cancellationToken = default(CancellationToken))
        {
            this.ContentType = CoreConstants.MimeTypeNames.Application.Json;
            this.Method = HttpMethods.PUT;
            return this.SendAsyncWithGraphResponse<DeviceManagement>(deviceManagementToUpdate, cancellationToken);
        }

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="value">The expand value.</param>
        /// <returns>The request object to send.</returns>
        public IDeviceManagementRequest Expand(string value)
        {
            this.QueryOptions.Add(new QueryOption("$expand", value));
            return this;
        }

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="expandExpression">The expression from which to calculate the expand value.</param>
        /// <returns>The request object to send.</returns>
        public IDeviceManagementRequest Expand(Expression<Func<DeviceManagement, object>> expandExpression)
        {
		    if (expandExpression == null)
            {
                throw new ArgumentNullException(nameof(expandExpression));
            }
            string error;
            string value = ExpressionExtractHelper.ExtractMembers(expandExpression, out error);
            if (value == null)
            {
                throw new ArgumentException(error, nameof(expandExpression));
            }
            else
            {
                this.QueryOptions.Add(new QueryOption("$expand", value));
            }
            return this;
        }

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="value">The select value.</param>
        /// <returns>The request object to send.</returns>
        public IDeviceManagementRequest Select(string value)
        {
            this.QueryOptions.Add(new QueryOption("$select", value));
            return this;
        }

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="selectExpression">The expression from which to calculate the select value.</param>
        /// <returns>The request object to send.</returns>
        public IDeviceManagementRequest Select(Expression<Func<DeviceManagement, object>> selectExpression)
        {
            if (selectExpression == null)
            {
                throw new ArgumentNullException(nameof(selectExpression));
            }
            string error;
            string value = ExpressionExtractHelper.ExtractMembers(selectExpression, out error);
            if (value == null)
            {
                throw new ArgumentException(error, nameof(selectExpression));
            }
            else
            {
                this.QueryOptions.Add(new QueryOption("$select", value));
            }
            return this;
        }

        /// <summary>
        /// Initializes any collection properties after deserialization, like next requests for paging.
        /// </summary>
        /// <param name="deviceManagementToInitialize">The <see cref="DeviceManagement"/> with the collection properties to initialize.</param>
        private void InitializeCollectionProperties(DeviceManagement deviceManagementToInitialize)
        {

            if (deviceManagementToInitialize != null && deviceManagementToInitialize.AdditionalData != null)
            {

                if (deviceManagementToInitialize.AndroidDeviceOwnerEnrollmentProfiles != null && deviceManagementToInitialize.AndroidDeviceOwnerEnrollmentProfiles.CurrentPage != null)
                {
                    deviceManagementToInitialize.AndroidDeviceOwnerEnrollmentProfiles.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("androidDeviceOwnerEnrollmentProfiles@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.AndroidDeviceOwnerEnrollmentProfiles.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.AndroidForWorkAppConfigurationSchemas != null && deviceManagementToInitialize.AndroidForWorkAppConfigurationSchemas.CurrentPage != null)
                {
                    deviceManagementToInitialize.AndroidForWorkAppConfigurationSchemas.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("androidForWorkAppConfigurationSchemas@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.AndroidForWorkAppConfigurationSchemas.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.AndroidForWorkEnrollmentProfiles != null && deviceManagementToInitialize.AndroidForWorkEnrollmentProfiles.CurrentPage != null)
                {
                    deviceManagementToInitialize.AndroidForWorkEnrollmentProfiles.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("androidForWorkEnrollmentProfiles@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.AndroidForWorkEnrollmentProfiles.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.AndroidManagedStoreAppConfigurationSchemas != null && deviceManagementToInitialize.AndroidManagedStoreAppConfigurationSchemas.CurrentPage != null)
                {
                    deviceManagementToInitialize.AndroidManagedStoreAppConfigurationSchemas.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("androidManagedStoreAppConfigurationSchemas@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.AndroidManagedStoreAppConfigurationSchemas.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.AuditEvents != null && deviceManagementToInitialize.AuditEvents.CurrentPage != null)
                {
                    deviceManagementToInitialize.AuditEvents.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("auditEvents@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.AuditEvents.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.AssignmentFilters != null && deviceManagementToInitialize.AssignmentFilters.CurrentPage != null)
                {
                    deviceManagementToInitialize.AssignmentFilters.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("assignmentFilters@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.AssignmentFilters.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.TermsAndConditions != null && deviceManagementToInitialize.TermsAndConditions.CurrentPage != null)
                {
                    deviceManagementToInitialize.TermsAndConditions.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("termsAndConditions@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.TermsAndConditions.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.CartToClassAssociations != null && deviceManagementToInitialize.CartToClassAssociations.CurrentPage != null)
                {
                    deviceManagementToInitialize.CartToClassAssociations.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("cartToClassAssociations@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.CartToClassAssociations.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DeviceCompliancePolicies != null && deviceManagementToInitialize.DeviceCompliancePolicies.CurrentPage != null)
                {
                    deviceManagementToInitialize.DeviceCompliancePolicies.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("deviceCompliancePolicies@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DeviceCompliancePolicies.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DeviceCompliancePolicySettingStateSummaries != null && deviceManagementToInitialize.DeviceCompliancePolicySettingStateSummaries.CurrentPage != null)
                {
                    deviceManagementToInitialize.DeviceCompliancePolicySettingStateSummaries.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("deviceCompliancePolicySettingStateSummaries@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DeviceCompliancePolicySettingStateSummaries.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DeviceConfigurationConflictSummary != null && deviceManagementToInitialize.DeviceConfigurationConflictSummary.CurrentPage != null)
                {
                    deviceManagementToInitialize.DeviceConfigurationConflictSummary.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("deviceConfigurationConflictSummary@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DeviceConfigurationConflictSummary.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DeviceConfigurationRestrictedAppsViolations != null && deviceManagementToInitialize.DeviceConfigurationRestrictedAppsViolations.CurrentPage != null)
                {
                    deviceManagementToInitialize.DeviceConfigurationRestrictedAppsViolations.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("deviceConfigurationRestrictedAppsViolations@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DeviceConfigurationRestrictedAppsViolations.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DeviceConfigurations != null && deviceManagementToInitialize.DeviceConfigurations.CurrentPage != null)
                {
                    deviceManagementToInitialize.DeviceConfigurations.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("deviceConfigurations@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DeviceConfigurations.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DeviceConfigurationsAllManagedDeviceCertificateStates != null && deviceManagementToInitialize.DeviceConfigurationsAllManagedDeviceCertificateStates.CurrentPage != null)
                {
                    deviceManagementToInitialize.DeviceConfigurationsAllManagedDeviceCertificateStates.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("deviceConfigurationsAllManagedDeviceCertificateStates@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DeviceConfigurationsAllManagedDeviceCertificateStates.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.IosUpdateStatuses != null && deviceManagementToInitialize.IosUpdateStatuses.CurrentPage != null)
                {
                    deviceManagementToInitialize.IosUpdateStatuses.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("iosUpdateStatuses@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.IosUpdateStatuses.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.MacOSSoftwareUpdateAccountSummaries != null && deviceManagementToInitialize.MacOSSoftwareUpdateAccountSummaries.CurrentPage != null)
                {
                    deviceManagementToInitialize.MacOSSoftwareUpdateAccountSummaries.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("macOSSoftwareUpdateAccountSummaries@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.MacOSSoftwareUpdateAccountSummaries.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ManagedDeviceEncryptionStates != null && deviceManagementToInitialize.ManagedDeviceEncryptionStates.CurrentPage != null)
                {
                    deviceManagementToInitialize.ManagedDeviceEncryptionStates.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("managedDeviceEncryptionStates@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ManagedDeviceEncryptionStates.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.NdesConnectors != null && deviceManagementToInitialize.NdesConnectors.CurrentPage != null)
                {
                    deviceManagementToInitialize.NdesConnectors.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("ndesConnectors@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.NdesConnectors.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ConfigurationCategories != null && deviceManagementToInitialize.ConfigurationCategories.CurrentPage != null)
                {
                    deviceManagementToInitialize.ConfigurationCategories.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("configurationCategories@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ConfigurationCategories.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ConfigurationPolicies != null && deviceManagementToInitialize.ConfigurationPolicies.CurrentPage != null)
                {
                    deviceManagementToInitialize.ConfigurationPolicies.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("configurationPolicies@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ConfigurationPolicies.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ConfigurationSettings != null && deviceManagementToInitialize.ConfigurationSettings.CurrentPage != null)
                {
                    deviceManagementToInitialize.ConfigurationSettings.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("configurationSettings@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ConfigurationSettings.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ComplianceManagementPartners != null && deviceManagementToInitialize.ComplianceManagementPartners.CurrentPage != null)
                {
                    deviceManagementToInitialize.ComplianceManagementPartners.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("complianceManagementPartners@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ComplianceManagementPartners.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DeviceCategories != null && deviceManagementToInitialize.DeviceCategories.CurrentPage != null)
                {
                    deviceManagementToInitialize.DeviceCategories.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("deviceCategories@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DeviceCategories.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DeviceEnrollmentConfigurations != null && deviceManagementToInitialize.DeviceEnrollmentConfigurations.CurrentPage != null)
                {
                    deviceManagementToInitialize.DeviceEnrollmentConfigurations.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("deviceEnrollmentConfigurations@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DeviceEnrollmentConfigurations.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DeviceManagementPartners != null && deviceManagementToInitialize.DeviceManagementPartners.CurrentPage != null)
                {
                    deviceManagementToInitialize.DeviceManagementPartners.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("deviceManagementPartners@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DeviceManagementPartners.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ExchangeConnectors != null && deviceManagementToInitialize.ExchangeConnectors.CurrentPage != null)
                {
                    deviceManagementToInitialize.ExchangeConnectors.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("exchangeConnectors@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ExchangeConnectors.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ExchangeOnPremisesPolicies != null && deviceManagementToInitialize.ExchangeOnPremisesPolicies.CurrentPage != null)
                {
                    deviceManagementToInitialize.ExchangeOnPremisesPolicies.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("exchangeOnPremisesPolicies@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ExchangeOnPremisesPolicies.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.MobileThreatDefenseConnectors != null && deviceManagementToInitialize.MobileThreatDefenseConnectors.CurrentPage != null)
                {
                    deviceManagementToInitialize.MobileThreatDefenseConnectors.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("mobileThreatDefenseConnectors@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.MobileThreatDefenseConnectors.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.Categories != null && deviceManagementToInitialize.Categories.CurrentPage != null)
                {
                    deviceManagementToInitialize.Categories.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("categories@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.Categories.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.Intents != null && deviceManagementToInitialize.Intents.CurrentPage != null)
                {
                    deviceManagementToInitialize.Intents.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("intents@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.Intents.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.SettingDefinitions != null && deviceManagementToInitialize.SettingDefinitions.CurrentPage != null)
                {
                    deviceManagementToInitialize.SettingDefinitions.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("settingDefinitions@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.SettingDefinitions.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.Templates != null && deviceManagementToInitialize.Templates.CurrentPage != null)
                {
                    deviceManagementToInitialize.Templates.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("templates@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.Templates.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ComanagedDevices != null && deviceManagementToInitialize.ComanagedDevices.CurrentPage != null)
                {
                    deviceManagementToInitialize.ComanagedDevices.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("comanagedDevices@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ComanagedDevices.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ComanagementEligibleDevices != null && deviceManagementToInitialize.ComanagementEligibleDevices.CurrentPage != null)
                {
                    deviceManagementToInitialize.ComanagementEligibleDevices.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("comanagementEligibleDevices@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ComanagementEligibleDevices.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DataSharingConsents != null && deviceManagementToInitialize.DataSharingConsents.CurrentPage != null)
                {
                    deviceManagementToInitialize.DataSharingConsents.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("dataSharingConsents@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DataSharingConsents.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DetectedApps != null && deviceManagementToInitialize.DetectedApps.CurrentPage != null)
                {
                    deviceManagementToInitialize.DetectedApps.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("detectedApps@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DetectedApps.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DeviceComplianceScripts != null && deviceManagementToInitialize.DeviceComplianceScripts.CurrentPage != null)
                {
                    deviceManagementToInitialize.DeviceComplianceScripts.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("deviceComplianceScripts@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DeviceComplianceScripts.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DeviceCustomAttributeShellScripts != null && deviceManagementToInitialize.DeviceCustomAttributeShellScripts.CurrentPage != null)
                {
                    deviceManagementToInitialize.DeviceCustomAttributeShellScripts.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("deviceCustomAttributeShellScripts@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DeviceCustomAttributeShellScripts.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DeviceHealthScripts != null && deviceManagementToInitialize.DeviceHealthScripts.CurrentPage != null)
                {
                    deviceManagementToInitialize.DeviceHealthScripts.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("deviceHealthScripts@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DeviceHealthScripts.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DeviceManagementScripts != null && deviceManagementToInitialize.DeviceManagementScripts.CurrentPage != null)
                {
                    deviceManagementToInitialize.DeviceManagementScripts.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("deviceManagementScripts@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DeviceManagementScripts.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DeviceShellScripts != null && deviceManagementToInitialize.DeviceShellScripts.CurrentPage != null)
                {
                    deviceManagementToInitialize.DeviceShellScripts.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("deviceShellScripts@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DeviceShellScripts.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ManagedDevices != null && deviceManagementToInitialize.ManagedDevices.CurrentPage != null)
                {
                    deviceManagementToInitialize.ManagedDevices.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("managedDevices@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ManagedDevices.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.MobileAppTroubleshootingEvents != null && deviceManagementToInitialize.MobileAppTroubleshootingEvents.CurrentPage != null)
                {
                    deviceManagementToInitialize.MobileAppTroubleshootingEvents.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("mobileAppTroubleshootingEvents@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.MobileAppTroubleshootingEvents.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.RemoteActionAudits != null && deviceManagementToInitialize.RemoteActionAudits.CurrentPage != null)
                {
                    deviceManagementToInitialize.RemoteActionAudits.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("remoteActionAudits@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.RemoteActionAudits.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsAppHealthApplicationPerformance != null && deviceManagementToInitialize.UserExperienceAnalyticsAppHealthApplicationPerformance.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsAppHealthApplicationPerformance.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsAppHealthApplicationPerformance@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsAppHealthApplicationPerformance.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion != null && deviceManagementToInitialize.UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion != null && deviceManagementToInitialize.UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsAppHealthDeviceModelPerformance != null && deviceManagementToInitialize.UserExperienceAnalyticsAppHealthDeviceModelPerformance.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsAppHealthDeviceModelPerformance.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsAppHealthDeviceModelPerformance@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsAppHealthDeviceModelPerformance.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsAppHealthDevicePerformance != null && deviceManagementToInitialize.UserExperienceAnalyticsAppHealthDevicePerformance.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsAppHealthDevicePerformance.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsAppHealthDevicePerformance@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsAppHealthDevicePerformance.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsAppHealthDevicePerformanceDetails != null && deviceManagementToInitialize.UserExperienceAnalyticsAppHealthDevicePerformanceDetails.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsAppHealthDevicePerformanceDetails.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsAppHealthDevicePerformanceDetails@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsAppHealthDevicePerformanceDetails.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsAppHealthOSVersionPerformance != null && deviceManagementToInitialize.UserExperienceAnalyticsAppHealthOSVersionPerformance.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsAppHealthOSVersionPerformance.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsAppHealthOSVersionPerformance@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsAppHealthOSVersionPerformance.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsBaselines != null && deviceManagementToInitialize.UserExperienceAnalyticsBaselines.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsBaselines.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsBaselines@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsBaselines.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsCategories != null && deviceManagementToInitialize.UserExperienceAnalyticsCategories.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsCategories.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsCategories@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsCategories.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsDeviceMetricHistory != null && deviceManagementToInitialize.UserExperienceAnalyticsDeviceMetricHistory.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsDeviceMetricHistory.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsDeviceMetricHistory@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsDeviceMetricHistory.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsDevicePerformance != null && deviceManagementToInitialize.UserExperienceAnalyticsDevicePerformance.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsDevicePerformance.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsDevicePerformance@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsDevicePerformance.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsDeviceStartupHistory != null && deviceManagementToInitialize.UserExperienceAnalyticsDeviceStartupHistory.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsDeviceStartupHistory.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsDeviceStartupHistory@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsDeviceStartupHistory.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsDeviceStartupProcesses != null && deviceManagementToInitialize.UserExperienceAnalyticsDeviceStartupProcesses.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsDeviceStartupProcesses.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsDeviceStartupProcesses@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsDeviceStartupProcesses.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsDeviceStartupProcessPerformance != null && deviceManagementToInitialize.UserExperienceAnalyticsDeviceStartupProcessPerformance.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsDeviceStartupProcessPerformance.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsDeviceStartupProcessPerformance@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsDeviceStartupProcessPerformance.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsDevicesWithoutCloudIdentity != null && deviceManagementToInitialize.UserExperienceAnalyticsDevicesWithoutCloudIdentity.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsDevicesWithoutCloudIdentity.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsDevicesWithoutCloudIdentity@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsDevicesWithoutCloudIdentity.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsImpactingProcess != null && deviceManagementToInitialize.UserExperienceAnalyticsImpactingProcess.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsImpactingProcess.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsImpactingProcess@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsImpactingProcess.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsMetricHistory != null && deviceManagementToInitialize.UserExperienceAnalyticsMetricHistory.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsMetricHistory.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsMetricHistory@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsMetricHistory.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsNotAutopilotReadyDevice != null && deviceManagementToInitialize.UserExperienceAnalyticsNotAutopilotReadyDevice.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsNotAutopilotReadyDevice.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsNotAutopilotReadyDevice@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsNotAutopilotReadyDevice.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsRemoteConnection != null && deviceManagementToInitialize.UserExperienceAnalyticsRemoteConnection.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsRemoteConnection.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsRemoteConnection@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsRemoteConnection.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsResourcePerformance != null && deviceManagementToInitialize.UserExperienceAnalyticsResourcePerformance.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsResourcePerformance.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsResourcePerformance@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsResourcePerformance.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserExperienceAnalyticsScoreHistory != null && deviceManagementToInitialize.UserExperienceAnalyticsScoreHistory.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserExperienceAnalyticsScoreHistory.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userExperienceAnalyticsScoreHistory@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserExperienceAnalyticsScoreHistory.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.WindowsMalwareInformation != null && deviceManagementToInitialize.WindowsMalwareInformation.CurrentPage != null)
                {
                    deviceManagementToInitialize.WindowsMalwareInformation.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("windowsMalwareInformation@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.WindowsMalwareInformation.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DerivedCredentials != null && deviceManagementToInitialize.DerivedCredentials.CurrentPage != null)
                {
                    deviceManagementToInitialize.DerivedCredentials.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("derivedCredentials@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DerivedCredentials.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ResourceAccessProfiles != null && deviceManagementToInitialize.ResourceAccessProfiles.CurrentPage != null)
                {
                    deviceManagementToInitialize.ResourceAccessProfiles.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("resourceAccessProfiles@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ResourceAccessProfiles.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.AppleUserInitiatedEnrollmentProfiles != null && deviceManagementToInitialize.AppleUserInitiatedEnrollmentProfiles.CurrentPage != null)
                {
                    deviceManagementToInitialize.AppleUserInitiatedEnrollmentProfiles.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("appleUserInitiatedEnrollmentProfiles@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.AppleUserInitiatedEnrollmentProfiles.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DepOnboardingSettings != null && deviceManagementToInitialize.DepOnboardingSettings.CurrentPage != null)
                {
                    deviceManagementToInitialize.DepOnboardingSettings.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("depOnboardingSettings@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DepOnboardingSettings.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ImportedDeviceIdentities != null && deviceManagementToInitialize.ImportedDeviceIdentities.CurrentPage != null)
                {
                    deviceManagementToInitialize.ImportedDeviceIdentities.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("importedDeviceIdentities@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ImportedDeviceIdentities.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ImportedWindowsAutopilotDeviceIdentities != null && deviceManagementToInitialize.ImportedWindowsAutopilotDeviceIdentities.CurrentPage != null)
                {
                    deviceManagementToInitialize.ImportedWindowsAutopilotDeviceIdentities.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("importedWindowsAutopilotDeviceIdentities@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ImportedWindowsAutopilotDeviceIdentities.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.WindowsAutopilotDeploymentProfiles != null && deviceManagementToInitialize.WindowsAutopilotDeploymentProfiles.CurrentPage != null)
                {
                    deviceManagementToInitialize.WindowsAutopilotDeploymentProfiles.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("windowsAutopilotDeploymentProfiles@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.WindowsAutopilotDeploymentProfiles.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.WindowsAutopilotDeviceIdentities != null && deviceManagementToInitialize.WindowsAutopilotDeviceIdentities.CurrentPage != null)
                {
                    deviceManagementToInitialize.WindowsAutopilotDeviceIdentities.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("windowsAutopilotDeviceIdentities@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.WindowsAutopilotDeviceIdentities.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ManagementConditions != null && deviceManagementToInitialize.ManagementConditions.CurrentPage != null)
                {
                    deviceManagementToInitialize.ManagementConditions.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("managementConditions@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ManagementConditions.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ManagementConditionStatements != null && deviceManagementToInitialize.ManagementConditionStatements.CurrentPage != null)
                {
                    deviceManagementToInitialize.ManagementConditionStatements.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("managementConditionStatements@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ManagementConditionStatements.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.GroupPolicyMigrationReports != null && deviceManagementToInitialize.GroupPolicyMigrationReports.CurrentPage != null)
                {
                    deviceManagementToInitialize.GroupPolicyMigrationReports.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("groupPolicyMigrationReports@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.GroupPolicyMigrationReports.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.GroupPolicyObjectFiles != null && deviceManagementToInitialize.GroupPolicyObjectFiles.CurrentPage != null)
                {
                    deviceManagementToInitialize.GroupPolicyObjectFiles.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("groupPolicyObjectFiles@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.GroupPolicyObjectFiles.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.GroupPolicyCategories != null && deviceManagementToInitialize.GroupPolicyCategories.CurrentPage != null)
                {
                    deviceManagementToInitialize.GroupPolicyCategories.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("groupPolicyCategories@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.GroupPolicyCategories.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.GroupPolicyConfigurations != null && deviceManagementToInitialize.GroupPolicyConfigurations.CurrentPage != null)
                {
                    deviceManagementToInitialize.GroupPolicyConfigurations.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("groupPolicyConfigurations@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.GroupPolicyConfigurations.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.GroupPolicyDefinitionFiles != null && deviceManagementToInitialize.GroupPolicyDefinitionFiles.CurrentPage != null)
                {
                    deviceManagementToInitialize.GroupPolicyDefinitionFiles.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("groupPolicyDefinitionFiles@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.GroupPolicyDefinitionFiles.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.GroupPolicyDefinitions != null && deviceManagementToInitialize.GroupPolicyDefinitions.CurrentPage != null)
                {
                    deviceManagementToInitialize.GroupPolicyDefinitions.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("groupPolicyDefinitions@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.GroupPolicyDefinitions.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.GroupPolicyUploadedDefinitionFiles != null && deviceManagementToInitialize.GroupPolicyUploadedDefinitionFiles.CurrentPage != null)
                {
                    deviceManagementToInitialize.GroupPolicyUploadedDefinitionFiles.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("groupPolicyUploadedDefinitionFiles@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.GroupPolicyUploadedDefinitionFiles.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.MicrosoftTunnelConfigurations != null && deviceManagementToInitialize.MicrosoftTunnelConfigurations.CurrentPage != null)
                {
                    deviceManagementToInitialize.MicrosoftTunnelConfigurations.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("microsoftTunnelConfigurations@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.MicrosoftTunnelConfigurations.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.MicrosoftTunnelHealthThresholds != null && deviceManagementToInitialize.MicrosoftTunnelHealthThresholds.CurrentPage != null)
                {
                    deviceManagementToInitialize.MicrosoftTunnelHealthThresholds.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("microsoftTunnelHealthThresholds@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.MicrosoftTunnelHealthThresholds.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.MicrosoftTunnelServerLogCollectionResponses != null && deviceManagementToInitialize.MicrosoftTunnelServerLogCollectionResponses.CurrentPage != null)
                {
                    deviceManagementToInitialize.MicrosoftTunnelServerLogCollectionResponses.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("microsoftTunnelServerLogCollectionResponses@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.MicrosoftTunnelServerLogCollectionResponses.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.MicrosoftTunnelSites != null && deviceManagementToInitialize.MicrosoftTunnelSites.CurrentPage != null)
                {
                    deviceManagementToInitialize.MicrosoftTunnelSites.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("microsoftTunnelSites@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.MicrosoftTunnelSites.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.NotificationMessageTemplates != null && deviceManagementToInitialize.NotificationMessageTemplates.CurrentPage != null)
                {
                    deviceManagementToInitialize.NotificationMessageTemplates.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("notificationMessageTemplates@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.NotificationMessageTemplates.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.DomainJoinConnectors != null && deviceManagementToInitialize.DomainJoinConnectors.CurrentPage != null)
                {
                    deviceManagementToInitialize.DomainJoinConnectors.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("domainJoinConnectors@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.DomainJoinConnectors.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ConfigManagerCollections != null && deviceManagementToInitialize.ConfigManagerCollections.CurrentPage != null)
                {
                    deviceManagementToInitialize.ConfigManagerCollections.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("configManagerCollections@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ConfigManagerCollections.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.ResourceOperations != null && deviceManagementToInitialize.ResourceOperations.CurrentPage != null)
                {
                    deviceManagementToInitialize.ResourceOperations.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("resourceOperations@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.ResourceOperations.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.RoleAssignments != null && deviceManagementToInitialize.RoleAssignments.CurrentPage != null)
                {
                    deviceManagementToInitialize.RoleAssignments.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("roleAssignments@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.RoleAssignments.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.RoleDefinitions != null && deviceManagementToInitialize.RoleDefinitions.CurrentPage != null)
                {
                    deviceManagementToInitialize.RoleDefinitions.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("roleDefinitions@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.RoleDefinitions.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.RoleScopeTags != null && deviceManagementToInitialize.RoleScopeTags.CurrentPage != null)
                {
                    deviceManagementToInitialize.RoleScopeTags.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("roleScopeTags@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.RoleScopeTags.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.RemoteAssistancePartners != null && deviceManagementToInitialize.RemoteAssistancePartners.CurrentPage != null)
                {
                    deviceManagementToInitialize.RemoteAssistancePartners.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("remoteAssistancePartners@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.RemoteAssistancePartners.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.EmbeddedSIMActivationCodePools != null && deviceManagementToInitialize.EmbeddedSIMActivationCodePools.CurrentPage != null)
                {
                    deviceManagementToInitialize.EmbeddedSIMActivationCodePools.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("embeddedSIMActivationCodePools@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.EmbeddedSIMActivationCodePools.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.TelecomExpenseManagementPartners != null && deviceManagementToInitialize.TelecomExpenseManagementPartners.CurrentPage != null)
                {
                    deviceManagementToInitialize.TelecomExpenseManagementPartners.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("telecomExpenseManagementPartners@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.TelecomExpenseManagementPartners.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.AutopilotEvents != null && deviceManagementToInitialize.AutopilotEvents.CurrentPage != null)
                {
                    deviceManagementToInitialize.AutopilotEvents.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("autopilotEvents@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.AutopilotEvents.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.TroubleshootingEvents != null && deviceManagementToInitialize.TroubleshootingEvents.CurrentPage != null)
                {
                    deviceManagementToInitialize.TroubleshootingEvents.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("troubleshootingEvents@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.TroubleshootingEvents.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.WindowsFeatureUpdateProfiles != null && deviceManagementToInitialize.WindowsFeatureUpdateProfiles.CurrentPage != null)
                {
                    deviceManagementToInitialize.WindowsFeatureUpdateProfiles.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("windowsFeatureUpdateProfiles@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.WindowsFeatureUpdateProfiles.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.WindowsQualityUpdateProfiles != null && deviceManagementToInitialize.WindowsQualityUpdateProfiles.CurrentPage != null)
                {
                    deviceManagementToInitialize.WindowsQualityUpdateProfiles.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("windowsQualityUpdateProfiles@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.WindowsQualityUpdateProfiles.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.WindowsUpdateCatalogItems != null && deviceManagementToInitialize.WindowsUpdateCatalogItems.CurrentPage != null)
                {
                    deviceManagementToInitialize.WindowsUpdateCatalogItems.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("windowsUpdateCatalogItems@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.WindowsUpdateCatalogItems.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.IntuneBrandingProfiles != null && deviceManagementToInitialize.IntuneBrandingProfiles.CurrentPage != null)
                {
                    deviceManagementToInitialize.IntuneBrandingProfiles.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("intuneBrandingProfiles@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.IntuneBrandingProfiles.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.WindowsInformationProtectionAppLearningSummaries != null && deviceManagementToInitialize.WindowsInformationProtectionAppLearningSummaries.CurrentPage != null)
                {
                    deviceManagementToInitialize.WindowsInformationProtectionAppLearningSummaries.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("windowsInformationProtectionAppLearningSummaries@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.WindowsInformationProtectionAppLearningSummaries.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.WindowsInformationProtectionNetworkLearningSummaries != null && deviceManagementToInitialize.WindowsInformationProtectionNetworkLearningSummaries.CurrentPage != null)
                {
                    deviceManagementToInitialize.WindowsInformationProtectionNetworkLearningSummaries.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("windowsInformationProtectionNetworkLearningSummaries@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.WindowsInformationProtectionNetworkLearningSummaries.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

                if (deviceManagementToInitialize.UserPfxCertificates != null && deviceManagementToInitialize.UserPfxCertificates.CurrentPage != null)
                {
                    deviceManagementToInitialize.UserPfxCertificates.AdditionalData = deviceManagementToInitialize.AdditionalData;

                    if(deviceManagementToInitialize.AdditionalData.TryGetValue("userPfxCertificates@odata.nextLink", out var nextPageLink))
                    {
                        // Ensure it is a non empty JsonElement string
                        if (nextPageLink is System.Text.Json.JsonElement element
                            && element.ValueKind == System.Text.Json.JsonValueKind.String
                            && !string.IsNullOrEmpty(element.GetString()))
                        {
                            deviceManagementToInitialize.UserPfxCertificates.InitializeNextPageRequest(
                                this.Client,
                                element.GetString());
                        }
                    }
                }

            }


        }
    }
}
