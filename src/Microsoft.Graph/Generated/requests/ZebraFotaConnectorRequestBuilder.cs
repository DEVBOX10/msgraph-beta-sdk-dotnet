// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type ZebraFotaConnectorRequestBuilder.
    /// </summary>
    public partial class ZebraFotaConnectorRequestBuilder : EntityRequestBuilder, IZebraFotaConnectorRequestBuilder
    {

        /// <summary>
        /// Constructs a new ZebraFotaConnectorRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public ZebraFotaConnectorRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IZebraFotaConnectorRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IZebraFotaConnectorRequest Request(IEnumerable<Option> options)
        {
            return new ZebraFotaConnectorRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for ZebraFotaConnectorConnect.
        /// </summary>
        /// <returns>The <see cref="IZebraFotaConnectorConnectRequestBuilder"/>.</returns>
        public IZebraFotaConnectorConnectRequestBuilder Connect()
        {
            return new ZebraFotaConnectorConnectRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.connect"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for ZebraFotaConnectorDisconnect.
        /// </summary>
        /// <returns>The <see cref="IZebraFotaConnectorDisconnectRequestBuilder"/>.</returns>
        public IZebraFotaConnectorDisconnectRequestBuilder Disconnect()
        {
            return new ZebraFotaConnectorDisconnectRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.disconnect"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for ZebraFotaConnectorApproveFotaApps.
        /// </summary>
        /// <returns>The <see cref="IZebraFotaConnectorApproveFotaAppsRequestBuilder"/>.</returns>
        public IZebraFotaConnectorApproveFotaAppsRequestBuilder ApproveFotaApps()
        {
            return new ZebraFotaConnectorApproveFotaAppsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.approveFotaApps"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for ZebraFotaConnectorHasActiveDeployments.
        /// </summary>
        /// <returns>The <see cref="IZebraFotaConnectorHasActiveDeploymentsRequestBuilder"/>.</returns>
        public IZebraFotaConnectorHasActiveDeploymentsRequestBuilder HasActiveDeployments()
        {
            return new ZebraFotaConnectorHasActiveDeploymentsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.hasActiveDeployments"),
                this.Client);
        }
    
    }
}
