// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type WindowsManagedAppProtectionRequestBuilder.
    /// </summary>
    public partial class WindowsManagedAppProtectionRequestBuilder : ManagedAppPolicyRequestBuilder, IWindowsManagedAppProtectionRequestBuilder
    {

        /// <summary>
        /// Constructs a new WindowsManagedAppProtectionRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public WindowsManagedAppProtectionRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IWindowsManagedAppProtectionRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IWindowsManagedAppProtectionRequest Request(IEnumerable<Option> options)
        {
            return new WindowsManagedAppProtectionRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for Apps.
        /// </summary>
        /// <returns>The <see cref="IWindowsManagedAppProtectionAppsCollectionRequestBuilder"/>.</returns>
        public IWindowsManagedAppProtectionAppsCollectionRequestBuilder Apps
        {
            get
            {
                return new WindowsManagedAppProtectionAppsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("apps"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Assignments.
        /// </summary>
        /// <returns>The <see cref="IWindowsManagedAppProtectionAssignmentsCollectionRequestBuilder"/>.</returns>
        public IWindowsManagedAppProtectionAssignmentsCollectionRequestBuilder Assignments
        {
            get
            {
                return new WindowsManagedAppProtectionAssignmentsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("assignments"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for WindowsManagedAppProtectionAssign.
        /// </summary>
        /// <returns>The <see cref="IWindowsManagedAppProtectionAssignRequestBuilder"/>.</returns>
        public IWindowsManagedAppProtectionAssignRequestBuilder Assign(
            IEnumerable<TargetedManagedAppPolicyAssignment> assignments = null)
        {
            return new WindowsManagedAppProtectionAssignRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.assign"),
                this.Client,
                assignments);
        }

        /// <summary>
        /// Gets the request builder for WindowsManagedAppProtectionTargetApps.
        /// </summary>
        /// <returns>The <see cref="IWindowsManagedAppProtectionTargetAppsRequestBuilder"/>.</returns>
        public IWindowsManagedAppProtectionTargetAppsRequestBuilder TargetApps(
            IEnumerable<ManagedMobileApp> apps = null)
        {
            return new WindowsManagedAppProtectionTargetAppsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.targetApps"),
                this.Client,
                apps);
        }
    
    }
}
