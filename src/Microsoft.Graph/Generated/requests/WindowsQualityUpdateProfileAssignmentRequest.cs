// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequest.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Net.Http;
    using System.Threading;
    using System.Linq.Expressions;

    /// <summary>
    /// The type WindowsQualityUpdateProfileAssignmentRequest.
    /// </summary>
    public partial class WindowsQualityUpdateProfileAssignmentRequest : BaseRequest, IWindowsQualityUpdateProfileAssignmentRequest
    {
        /// <summary>
        /// Constructs a new WindowsQualityUpdateProfileAssignmentRequest.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        /// <param name="options">Query and header option name value pairs for the request.</param>
        public WindowsQualityUpdateProfileAssignmentRequest(
            string requestUrl,
            IBaseClient client,
            IEnumerable<Option> options)
            : base(requestUrl, client, options)
        {
        }

        /// <summary>
        /// Creates the specified WindowsQualityUpdateProfileAssignment using POST.
        /// </summary>
        /// <param name="windowsQualityUpdateProfileAssignmentToCreate">The WindowsQualityUpdateProfileAssignment to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The created WindowsQualityUpdateProfileAssignment.</returns>
        public async System.Threading.Tasks.Task<WindowsQualityUpdateProfileAssignment> CreateAsync(WindowsQualityUpdateProfileAssignment windowsQualityUpdateProfileAssignmentToCreate, CancellationToken cancellationToken = default(CancellationToken))
        {
            this.ContentType = CoreConstants.MimeTypeNames.Application.Json;
            this.Method = HttpMethods.POST;
            var newEntity = await this.SendAsync<WindowsQualityUpdateProfileAssignment>(windowsQualityUpdateProfileAssignmentToCreate, cancellationToken).ConfigureAwait(false);
            this.InitializeCollectionProperties(newEntity);
            return newEntity;
        }

        /// <summary>
        /// Creates the specified WindowsQualityUpdateProfileAssignment using POST and returns a <see cref="GraphResponse{WindowsQualityUpdateProfileAssignment}"/> object.
        /// </summary>
        /// <param name="windowsQualityUpdateProfileAssignmentToCreate">The WindowsQualityUpdateProfileAssignment to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{WindowsQualityUpdateProfileAssignment}"/> object of the request.</returns>
        public System.Threading.Tasks.Task<GraphResponse<WindowsQualityUpdateProfileAssignment>> CreateResponseAsync(WindowsQualityUpdateProfileAssignment windowsQualityUpdateProfileAssignmentToCreate, CancellationToken cancellationToken = default(CancellationToken))
        {
            this.ContentType = CoreConstants.MimeTypeNames.Application.Json;
            this.Method = HttpMethods.POST;
            return this.SendAsyncWithGraphResponse<WindowsQualityUpdateProfileAssignment>(windowsQualityUpdateProfileAssignmentToCreate, cancellationToken);
        }

        /// <summary>
        /// Deletes the specified WindowsQualityUpdateProfileAssignment.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        public async System.Threading.Tasks.Task DeleteAsync(CancellationToken cancellationToken = default(CancellationToken))
        {
            this.Method = HttpMethods.DELETE;
            await this.SendAsync<WindowsQualityUpdateProfileAssignment>(null, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Deletes the specified WindowsQualityUpdateProfileAssignment and returns a <see cref="GraphResponse"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task of <see cref="GraphResponse"/> to await.</returns>
        public System.Threading.Tasks.Task<GraphResponse> DeleteResponseAsync(CancellationToken cancellationToken = default(CancellationToken))
        {
            this.Method = HttpMethods.DELETE;
            return this.SendAsyncWithGraphResponse(null, cancellationToken);
        }

        /// <summary>
        /// Gets the specified WindowsQualityUpdateProfileAssignment.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The WindowsQualityUpdateProfileAssignment.</returns>
        public async System.Threading.Tasks.Task<WindowsQualityUpdateProfileAssignment> GetAsync(CancellationToken cancellationToken = default(CancellationToken))
        {
            this.Method = HttpMethods.GET;
            var retrievedEntity = await this.SendAsync<WindowsQualityUpdateProfileAssignment>(null, cancellationToken).ConfigureAwait(false);
            this.InitializeCollectionProperties(retrievedEntity);
            return retrievedEntity;
        }

        /// <summary>
        /// Gets the specified WindowsQualityUpdateProfileAssignment and returns a <see cref="GraphResponse{WindowsQualityUpdateProfileAssignment}"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{WindowsQualityUpdateProfileAssignment}"/> object of the request.</returns>
        public System.Threading.Tasks.Task<GraphResponse<WindowsQualityUpdateProfileAssignment>> GetResponseAsync(CancellationToken cancellationToken = default(CancellationToken))
        {
            this.Method = HttpMethods.GET;
            return this.SendAsyncWithGraphResponse<WindowsQualityUpdateProfileAssignment>(null, cancellationToken);
        }

        /// <summary>
        /// Updates the specified WindowsQualityUpdateProfileAssignment using PATCH.
        /// </summary>
        /// <param name="windowsQualityUpdateProfileAssignmentToUpdate">The WindowsQualityUpdateProfileAssignment to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The updated WindowsQualityUpdateProfileAssignment.</returns>
        public async System.Threading.Tasks.Task<WindowsQualityUpdateProfileAssignment> UpdateAsync(WindowsQualityUpdateProfileAssignment windowsQualityUpdateProfileAssignmentToUpdate, CancellationToken cancellationToken = default(CancellationToken))
        {
            this.ContentType = CoreConstants.MimeTypeNames.Application.Json;
            this.Method = HttpMethods.PATCH;
            var updatedEntity = await this.SendAsync<WindowsQualityUpdateProfileAssignment>(windowsQualityUpdateProfileAssignmentToUpdate, cancellationToken).ConfigureAwait(false);
            this.InitializeCollectionProperties(updatedEntity);
            return updatedEntity;
        }

        /// <summary>
        /// Updates the specified WindowsQualityUpdateProfileAssignment using PATCH and returns a <see cref="GraphResponse{WindowsQualityUpdateProfileAssignment}"/> object.
        /// </summary>
        /// <param name="windowsQualityUpdateProfileAssignmentToUpdate">The WindowsQualityUpdateProfileAssignment to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The <see cref="GraphResponse{WindowsQualityUpdateProfileAssignment}"/> object of the request.</returns>
        public System.Threading.Tasks.Task<GraphResponse<WindowsQualityUpdateProfileAssignment>> UpdateResponseAsync(WindowsQualityUpdateProfileAssignment windowsQualityUpdateProfileAssignmentToUpdate, CancellationToken cancellationToken = default(CancellationToken))
        {
            this.ContentType = CoreConstants.MimeTypeNames.Application.Json;
            this.Method = HttpMethods.PATCH;
            return this.SendAsyncWithGraphResponse<WindowsQualityUpdateProfileAssignment>(windowsQualityUpdateProfileAssignmentToUpdate, cancellationToken);
        }

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="value">The expand value.</param>
        /// <returns>The request object to send.</returns>
        public IWindowsQualityUpdateProfileAssignmentRequest Expand(string value)
        {
            this.QueryOptions.Add(new QueryOption("$expand", value));
            return this;
        }

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="expandExpression">The expression from which to calculate the expand value.</param>
        /// <returns>The request object to send.</returns>
        public IWindowsQualityUpdateProfileAssignmentRequest Expand(Expression<Func<WindowsQualityUpdateProfileAssignment, object>> expandExpression)
        {
		    if (expandExpression == null)
            {
                throw new ArgumentNullException(nameof(expandExpression));
            }
            string error;
            string value = ExpressionExtractHelper.ExtractMembers(expandExpression, out error);
            if (value == null)
            {
                throw new ArgumentException(error, nameof(expandExpression));
            }
            else
            {
                this.QueryOptions.Add(new QueryOption("$expand", value));
            }
            return this;
        }

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="value">The select value.</param>
        /// <returns>The request object to send.</returns>
        public IWindowsQualityUpdateProfileAssignmentRequest Select(string value)
        {
            this.QueryOptions.Add(new QueryOption("$select", value));
            return this;
        }

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="selectExpression">The expression from which to calculate the select value.</param>
        /// <returns>The request object to send.</returns>
        public IWindowsQualityUpdateProfileAssignmentRequest Select(Expression<Func<WindowsQualityUpdateProfileAssignment, object>> selectExpression)
        {
            if (selectExpression == null)
            {
                throw new ArgumentNullException(nameof(selectExpression));
            }
            string error;
            string value = ExpressionExtractHelper.ExtractMembers(selectExpression, out error);
            if (value == null)
            {
                throw new ArgumentException(error, nameof(selectExpression));
            }
            else
            {
                this.QueryOptions.Add(new QueryOption("$select", value));
            }
            return this;
        }

        /// <summary>
        /// Initializes any collection properties after deserialization, like next requests for paging.
        /// </summary>
        /// <param name="windowsQualityUpdateProfileAssignmentToInitialize">The <see cref="WindowsQualityUpdateProfileAssignment"/> with the collection properties to initialize.</param>
        private void InitializeCollectionProperties(WindowsQualityUpdateProfileAssignment windowsQualityUpdateProfileAssignmentToInitialize)
        {

        }
    }
}
